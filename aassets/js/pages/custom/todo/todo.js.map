{"version":3,"sources":["custom/todo/todo.js"],"names":["KTAppTodo","asideEl","listEl","viewEl","init","KTUtil","getByID","initAside","initList","initCommentForm","initView","KTOffcanvas","overlay","baseClass","closeBy","toggleBy","on","e","actionsEl","find","this","target","contains","isInResponsiveRange","loading","KTDialog","type","placement","message","show","setTimeout","hide","css","items","findAll","i","j","length","item","checked","addClass","removeClass","closest","editor","Quill","modules","toolbar","placeholder","theme","elemId","id","previewNode","$","previewTemplate","parent","html","remove","myDropzone","Dropzone","url","parallelUploads","maxFilesize","previewsContainer","clickable","file","document","progress","querySelector","style","width","opacity","thisProgressBar","initAttachments","ready"],"mappings":"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","file":"todo.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTAppTodo = function() {\r\n    var asideEl;\r\n    var listEl;\r\n    var viewEl;\r\n\r\n    var asideOffcanvas;\r\n\r\n    var initEditor = function(editor) {\r\n        // init editor\r\n        var options = {\r\n            modules: {\r\n                toolbar: {}\r\n            },\r\n            placeholder: 'Type message...',\r\n            theme: 'snow'\r\n        };\r\n\r\n        var editor = new Quill('#' + editor, options);\r\n    }\r\n\r\n    var initAttachments = function(elemId) {\r\n        var id = \"#\" + elemId;\r\n        var previewNode = $(id + \" .dropzone-item\");\r\n        previewNode.id = \"\";\r\n        var previewTemplate = previewNode.parent('.dropzone-items').html();\r\n        previewNode.remove();\r\n\r\n        var myDropzone = new Dropzone(id, { // Make the whole body a dropzone\r\n            url: \"https://keenthemes.com/scripts/void.php\", // Set the url for your upload script location\r\n            parallelUploads: 20,\r\n            maxFilesize: 1, // Max filesize in MB\r\n            previewTemplate: previewTemplate,\r\n            previewsContainer: id + \" .dropzone-items\", // Define the container to display the previews\r\n            clickable: id + \"_select\" // Define the element that should be used as click trigger to select files.\r\n        });\r\n\r\n        myDropzone.on(\"addedfile\", function(file) {\r\n            // Hookup the start button\r\n            $(document).find(id + ' .dropzone-item').css('display', '');\r\n        });\r\n\r\n        // Update the total progress bar\r\n        myDropzone.on(\"totaluploadprogress\", function(progress) {\r\n            document.querySelector(id + \" .progress-bar\").style.width = progress + \"%\";\r\n        });\r\n\r\n        myDropzone.on(\"sending\", function(file) {\r\n            // Show the total progress bar when upload starts\r\n            document.querySelector(id + \" .progress-bar\").style.opacity = \"1\";\r\n        });\r\n\r\n        // Hide the total progress bar when nothing's uploading anymore\r\n        myDropzone.on(\"complete\", function(progress) {\r\n            var thisProgressBar = id + \" .dz-complete\";\r\n            setTimeout(function() {\r\n                $(thisProgressBar + \" .progress-bar, \" + thisProgressBar + \" .progress\").css('opacity', '0');\r\n            }, 300)\r\n        });\r\n    }\r\n\r\n    return {\r\n        // public functions\r\n        init: function() {\r\n            asideEl = KTUtil.getByID('kt_todo_aside');\r\n            listEl = KTUtil.getByID('kt_todo_list');\r\n            viewEl = KTUtil.getByID('kt_todo_view');\r\n\r\n            // init\r\n            KTAppTodo.initAside();\r\n            KTAppTodo.initList();\r\n            KTAppTodo.initCommentForm();\r\n            KTAppTodo.initView();\r\n        },\r\n\r\n        initAside: function() {\r\n            // Mobile offcanvas for mobile mode\r\n            asideOffcanvas = new KTOffcanvas(asideEl, {\r\n                overlay: true,\r\n                baseClass: 'kt-todo__aside',\r\n                closeBy: 'kt_todo_aside_close',\r\n                toggleBy: 'kt_subheader_mobile_toggle'\r\n            });\r\n        },\r\n\r\n        initList: function() {\r\n            // View message\r\n            KTUtil.on(listEl, '.kt-todo__item', 'click', function(e) {\r\n                var actionsEl = KTUtil.find(this, '.kt-todo__actions');\r\n\r\n                // skip actions click\r\n                if (e.target === actionsEl || (actionsEl && actionsEl.contains(e.target) === true)) {\r\n                    return false;\r\n                }\r\n\r\n                if (KTUtil.isInResponsiveRange('tablet-and-mobile') === false) {\r\n                    return; // mobile mode\r\n                }\r\n\r\n                // demo loading\r\n                var loading = new KTDialog({\r\n                    'type': 'loader',\r\n                    'placement': 'top center',\r\n                    'message': 'Loading ...'\r\n                });\r\n                loading.show();\r\n\r\n                setTimeout(function() {\r\n                    loading.hide();\r\n\r\n                    KTUtil.css(listEl, 'display', 'none');\r\n                    KTUtil.css(viewEl, 'display', 'flex');\r\n                }, 700);\r\n            });\r\n\r\n            // Group selection\r\n            KTUtil.on(listEl, '.kt-todo__toolbar .kt-todo__check .kt-checkbox input', 'click', function() {\r\n                var items = KTUtil.findAll(listEl, '.kt-todo__items .kt-todo__item');\r\n\r\n                for (var i = 0, j = items.length; i < j; i++) {\r\n                    var item = items[i];\r\n                    var checkbox = KTUtil.find(item, '.kt-todo__actions .kt-checkbox input');\r\n                    checkbox.checked = this.checked;\r\n\r\n                    if (this.checked) {\r\n                        KTUtil.addClass(item, 'kt-todo__item--selected');\r\n                    } else {\r\n                        KTUtil.removeClass(item, 'kt-todo__item--selected');\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Individual selection\r\n            KTUtil.on(listEl, '.kt-todo__item .kt-checkbox input', 'click', function() {\r\n                var item = this.closest('.kt-todo__item');\r\n\r\n                if (item && this.checked) {\r\n                    KTUtil.addClass(item, 'kt-todo__item--selected');\r\n                } else {\r\n                    KTUtil.removeClass(item, 'kt-todo__item--selected');\r\n                }\r\n            });\r\n        },\r\n\r\n        initView: function() {\r\n            // Back to listing\r\n            KTUtil.on(viewEl, '.kt-todo__toolbar .kt-todo__icon.kt-todo__icon--back', 'click', function() {\r\n                // demo loading\r\n                var loading = new KTDialog({\r\n                    'type': 'loader',\r\n                    'placement': 'top center',\r\n                    'message': 'Loading ...'\r\n                });\r\n                loading.show();\r\n\r\n                setTimeout(function() {\r\n                    loading.hide();\r\n\r\n                    KTUtil.css(listEl, 'display', 'flex');\r\n                    KTUtil.css(viewEl, 'display', 'none');\r\n                }, 700);\r\n            });\r\n        },\r\n\r\n        initCommentForm: function() {\r\n            initEditor('kt_todo_post_editor');\r\n            initAttachments('kt_todo_post_attachments');\r\n        }\r\n    };\r\n}();\r\n\r\nKTUtil.ready(function() {\r\n    KTAppTodo.init();\r\n});\r\n"]}