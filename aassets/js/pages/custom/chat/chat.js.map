{"version":3,"sources":["custom/chat/chat.js"],"names":["KTAppChat","chatAsideEl","init","KTUtil","getByID","KTOffcanvas","overlay","baseClass","closeBy","toggleBy","userListEl","find","scrollInit","mobileNativeScroll","desktopNativeScroll","resetHeightOnDestroy","handleWindowResize","rememberPosition","height","portletBodyEl","widgetEl","searchbarEl","isInResponsiveRange","KTLayout","getContentHeight","getViewPort","parseInt","css","initAside","KTChat","setup","setTimeout","click","ready"],"mappings":"AAAA,aAGA,IAAIA,UAAY,WACf,IAAIC,EAkEJ,MAAO,CAENC,KAAM,WAELD,EAAcE,OAAOC,QAAQ,iBAlEf,WAEC,IAAIC,YAAYJ,EAAa,CACnCK,SAAS,EACTC,UAAW,gBACXC,QAAS,sBACTC,SAAU,gCAJpB,IAQIC,EAAaP,OAAOQ,KAAKV,EAAa,cACrCS,GAKLP,OAAOS,WAAWF,EAAY,CAC7BG,oBAAoB,EACpBC,qBAAqB,EACrBC,sBAAsB,EACtBC,oBAAoB,EACpBC,kBAAkB,EAClBC,OAAQ,WACP,IAAIA,EACAC,EAAgBhB,OAAOQ,KAAKV,EAAa,mCACzCmB,EAAWjB,OAAOQ,KAAKV,EAAa,+BACpCoB,EAAclB,OAAOQ,KAAKV,EAAa,iBA+B3C,OA5BCiB,EADGf,OAAOmB,oBAAoB,WACrBC,SAASC,mBAETrB,OAAOsB,cAAcP,OAG3BjB,IAEHiB,GADAA,EAASA,EAASQ,SAASvB,OAAOwB,IAAI1B,EAAa,eAAiByB,SAASvB,OAAOwB,IAAI1B,EAAa,mBACnFyB,SAASvB,OAAOwB,IAAI1B,EAAa,gBAAkByB,SAASvB,OAAOwB,IAAI1B,EAAa,oBAGnGmB,IAEHF,GADAA,EAASA,EAASQ,SAASvB,OAAOwB,IAAIP,EAAU,eAAiBM,SAASvB,OAAOwB,IAAIP,EAAU,mBAC7EM,SAASvB,OAAOwB,IAAIP,EAAU,gBAAkBM,SAASvB,OAAOwB,IAAIP,EAAU,oBAG7FD,IAEHD,GADAA,EAASA,EAASQ,SAASvB,OAAOwB,IAAIR,EAAe,eAAiBO,SAASvB,OAAOwB,IAAIR,EAAe,mBACvFO,SAASvB,OAAOwB,IAAIR,EAAe,gBAAkBO,SAASvB,OAAOwB,IAAIR,EAAe,oBAGvGE,IAEHH,GADAA,GAAkBQ,SAASvB,OAAOwB,IAAIN,EAAa,YACjCK,SAASvB,OAAOwB,IAAIN,EAAa,eAAiBK,SAASvB,OAAOwB,IAAIN,EAAa,mBAItGH,GAAkB,KAcnBU,GAGAC,OAAOC,MAAM3B,OAAOC,QAAQ,oBAGxBD,OAAOC,QAAQ,2BAClB2B,WAAW,WACV5B,OAAOC,QAAQ,0BAA0B4B,SACvC,OAnFS,GAyFhB7B,OAAO8B,MAAM,WACZjC,UAAUE","file":"chat.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTAppChat = function () {\r\n\tvar chatAsideEl;\r\n\tvar chatContentEl;\r\n\r\n\t// Private functions\r\n\tvar initAside = function () {\r\n\t\t// Mobile offcanvas for mobile mode\r\n\t\tvar offcanvas = new KTOffcanvas(chatAsideEl, {\r\n            overlay: true,  \r\n            baseClass: 'kt-app__aside',\r\n            closeBy: 'kt_chat_aside_close',\r\n            toggleBy: 'kt_chat_aside_mobile_toggle'\r\n        }); \r\n\r\n\t\t// User listing \r\n\t\tvar userListEl = KTUtil.find(chatAsideEl, '.kt-scroll');\r\n\t\tif (!userListEl) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Initialize perfect scrollbar(see:  https://github.com/utatti/perfect-scrollbar) \r\n\t\tKTUtil.scrollInit(userListEl, {\r\n\t\t\tmobileNativeScroll: true,  // enable native scroll for mobile\r\n\t\t\tdesktopNativeScroll: false, // disable native scroll and use custom scroll for desktop \r\n\t\t\tresetHeightOnDestroy: true,  // reset css height on scroll feature destroyed\r\n\t\t\thandleWindowResize: true, // recalculate hight on window resize\r\n\t\t\trememberPosition: true, // remember scroll position in cookie\r\n\t\t\theight: function() {  // calculate height\r\n\t\t\t\tvar height;\r\n\t\t\t\tvar portletBodyEl = KTUtil.find(chatAsideEl, '.kt-portlet > .kt-portlet__body');\r\n\t\t\t\tvar widgetEl = KTUtil.find(chatAsideEl, '.kt-widget.kt-widget--users');\r\n\t\t\t\tvar searchbarEl = KTUtil.find(chatAsideEl, '.kt-searchbar');\r\n\r\n\t\t\t\tif (KTUtil.isInResponsiveRange('desktop')) {\r\n\t\t\t\t\theight = KTLayout.getContentHeight();\r\n\t\t\t\t} else {\r\n\t\t\t\t\theight = KTUtil.getViewPort().height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (chatAsideEl) {\r\n\t\t\t\t\theight = height - parseInt(KTUtil.css(chatAsideEl, 'margin-top')) - parseInt(KTUtil.css(chatAsideEl, 'margin-bottom'));\r\n\t\t\t\t\theight = height - parseInt(KTUtil.css(chatAsideEl, 'padding-top')) - parseInt(KTUtil.css(chatAsideEl, 'padding-bottom'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (widgetEl) {\r\n\t\t\t\t\theight = height - parseInt(KTUtil.css(widgetEl, 'margin-top')) - parseInt(KTUtil.css(widgetEl, 'margin-bottom'));\r\n\t\t\t\t\theight = height - parseInt(KTUtil.css(widgetEl, 'padding-top')) - parseInt(KTUtil.css(widgetEl, 'padding-bottom'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (portletBodyEl) {\r\n\t\t\t\t\theight = height - parseInt(KTUtil.css(portletBodyEl, 'margin-top')) - parseInt(KTUtil.css(portletBodyEl, 'margin-bottom'));\r\n\t\t\t\t\theight = height - parseInt(KTUtil.css(portletBodyEl, 'padding-top')) - parseInt(KTUtil.css(portletBodyEl, 'padding-bottom'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (searchbarEl) {\r\n\t\t\t\t\theight = height - parseInt(KTUtil.css(searchbarEl, 'height'));\r\n\t\t\t\t\theight = height - parseInt(KTUtil.css(searchbarEl, 'margin-top')) - parseInt(KTUtil.css(searchbarEl, 'margin-bottom'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// remove additional space\r\n\t\t\t\theight = height - 5;\r\n\t\t\t\t\r\n\t\t\t\treturn height;\r\n\t\t\t} \r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\t// public functions\r\n\t\tinit: function() {\r\n\t\t\t// elements\r\n\t\t\tchatAsideEl = KTUtil.getByID('kt_chat_aside');\r\n\r\n\t\t\t// init aside and user list\r\n\t\t\tinitAside();\r\n\r\n\t\t\t// init inline chat example\r\n\t\t\tKTChat.setup(KTUtil.getByID('kt_chat_content'));\r\n\r\n\t\t\t// trigger click to show popup modal chat on page load\r\n\t\t\tif (KTUtil.getByID('kt_app_chat_launch_btn')) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tKTUtil.getByID('kt_app_chat_launch_btn').click();\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}();\r\n\r\nKTUtil.ready(function() {\t\r\n\tKTAppChat.init();\r\n});"]}