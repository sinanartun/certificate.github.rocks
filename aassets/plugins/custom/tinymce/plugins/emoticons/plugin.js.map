{"version":3,"sources":["emoticons/plugin.js"],"names":["domGlobals","eq","call","id","me","type","merger","global","tinymce","util","Tools","resolve","noop","constant","value","never","always","none","NONE","o","isNone","fold","n","s","is","isSome","getOr","getOrThunk","thunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","equals","equals_","toArray","toString","Object","freeze","some","a","constant_a","self","f","v","elementEq","b","Option","from","isFunction","x","t","Array","prototype","isPrototypeOf","constructor","name","String","typeOf","nativeSlice","slice","xs","len","length","r","i","contains","str","substr","indexOf","emojiMatches","emoji","lowerCasePattern","title","toLowerCase","pred","keywords","k","emojisFrom","list","pattern","maxResults","matches","reachedLimit","max","size","push","char","text","icon","init","editor","database","ui","registry","addAutocompleter","ch","columns","minChars","fetch","waitForLoad","then","candidates","listAll","onAction","autocompleteApi","rng","selection","setRng","insertContent","hide","Cell","initial","get","set","clone","hasOwnProperty","merge","old","nu","objects","arguments","ret","j","curObject","key","keys","hasOwnProperty$1","obj","props","tupleMap","tuple","global$1","global$2","global$3","Settings","getEmoticonDatabaseUrl","pluginUrl","getParam","suffix","getEmoticonDatabaseId","getAppendedEmoticons","ALL_CATEGORY","categoryNameMap","symbols","people","animals_and_nature","food_and_drink","activity","travel_and_places","flags","user","translateCategory","categories","getUserDefinedEmoticons","userDefinedEmoticons","category","initDatabase","databaseUrl","databaseId","all","on","load","emojis","userEmojis","cats","everything","lib","entry","current","concat","processEmojis","err","console","log","hasLoaded","listCategories","reject","numRetries","interval","setInterval","clearInterval","listCategory","Dialog","fn","rate","timer","initialState","results","currentTab","updateFilter","dialogApi","dialogData","getData","setData","scan","cancel","clearTimeout","throttle","args","_i","setTimeout","apply","searchField","label","resultsField","getInitialState","body","tabs","cat","items","initialData","onTabChange","details","newTabName","onChange","actionData","insertEmoticon","close","buttons","primary","windowManager","open","focus","block","redial","unblock","catch","level","Buttons","register","addButton","tooltip","addMenuItem","add","window"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.1.0 (2019-10-17)\n */\n(function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isFunction = isType('function');\n\n    var nativeSlice = Array.prototype.slice;\n    var exists = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var contains = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n\n    var emojiMatches = function (emoji, lowerCasePattern) {\n      return contains(emoji.title.toLowerCase(), lowerCasePattern) || exists(emoji.keywords, function (k) {\n        return contains(k.toLowerCase(), lowerCasePattern);\n      });\n    };\n    var emojisFrom = function (list, pattern, maxResults) {\n      var matches = [];\n      var lowerCasePattern = pattern.toLowerCase();\n      var reachedLimit = maxResults.fold(function () {\n        return never;\n      }, function (max) {\n        return function (size) {\n          return size >= max;\n        };\n      });\n      for (var i = 0; i < list.length; i++) {\n        if (pattern.length === 0 || emojiMatches(list[i], lowerCasePattern)) {\n          matches.push({\n            value: list[i].char,\n            text: list[i].title,\n            icon: list[i].char\n          });\n          if (reachedLimit(matches.length)) {\n            break;\n          }\n        }\n      }\n      return matches;\n    };\n\n    var init = function (editor, database) {\n      editor.ui.registry.addAutocompleter('emoticons', {\n        ch: ':',\n        columns: 'auto',\n        minChars: 2,\n        fetch: function (pattern, maxResults) {\n          return database.waitForLoad().then(function () {\n            var candidates = database.listAll();\n            return emojisFrom(candidates, pattern, Option.some(maxResults));\n          });\n        },\n        onAction: function (autocompleteApi, rng, value) {\n          editor.selection.setRng(rng);\n          editor.insertContent(value);\n          autocompleteApi.hide();\n        }\n      });\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var last = function (fn, rate) {\n      var timer = null;\n      var cancel = function () {\n        if (timer !== null) {\n          domGlobals.clearTimeout(timer);\n          timer = null;\n        }\n      };\n      var throttle = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (timer !== null) {\n          domGlobals.clearTimeout(timer);\n        }\n        timer = domGlobals.setTimeout(function () {\n          fn.apply(null, args);\n          timer = null;\n        }, rate);\n      };\n      return {\n        cancel: cancel,\n        throttle: throttle\n      };\n    };\n\n    var insertEmoticon = function (editor, ch) {\n      editor.insertContent(ch);\n    };\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var shallow = function (old, nu) {\n      return nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++) {\n          objects[i] = arguments[i];\n        }\n        if (objects.length === 0) {\n          throw new Error('Can\\'t merge zero objects');\n        }\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject) {\n            if (hasOwnProperty.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    var merge = baseMerge(shallow);\n\n    var keys = Object.keys;\n    var hasOwnProperty$1 = Object.hasOwnProperty;\n    var each = function (obj, f) {\n      var props = keys(obj);\n      for (var k = 0, len = props.length; k < len; k++) {\n        var i = props[k];\n        var x = obj[i];\n        f(x, i);\n      }\n    };\n    var map$1 = function (obj, f) {\n      return tupleMap(obj, function (x, i) {\n        return {\n          k: i,\n          v: f(x, i)\n        };\n      });\n    };\n    var tupleMap = function (obj, f) {\n      var r = {};\n      each(obj, function (x, i) {\n        var tuple = f(x, i);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n    var has = function (obj, key) {\n      return hasOwnProperty$1.call(obj, key);\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Resource');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.Promise');\n\n    var DEFAULT_ID = 'tinymce.plugins.emoticons';\n    var getEmoticonDatabaseUrl = function (editor, pluginUrl) {\n      return editor.getParam('emoticons_database_url', pluginUrl + '/js/emojis' + editor.suffix + '.js');\n    };\n    var getEmoticonDatabaseId = function (editor) {\n      return editor.getParam('emoticons_database_id', DEFAULT_ID, 'string');\n    };\n    var getAppendedEmoticons = function (editor) {\n      return editor.getParam('emoticons_append', {}, 'object');\n    };\n    var Settings = {\n      getEmoticonDatabaseUrl: getEmoticonDatabaseUrl,\n      getEmoticonDatabaseId: getEmoticonDatabaseId,\n      getAppendedEmoticons: getAppendedEmoticons\n    };\n\n    var ALL_CATEGORY = 'All';\n    var categoryNameMap = {\n      symbols: 'Symbols',\n      people: 'People',\n      animals_and_nature: 'Animals and Nature',\n      food_and_drink: 'Food and Drink',\n      activity: 'Activity',\n      travel_and_places: 'Travel and Places',\n      objects: 'Objects',\n      flags: 'Flags',\n      user: 'User Defined'\n    };\n    var translateCategory = function (categories, name) {\n      return has(categories, name) ? categories[name] : name;\n    };\n    var getUserDefinedEmoticons = function (editor) {\n      var userDefinedEmoticons = Settings.getAppendedEmoticons(editor);\n      return map$1(userDefinedEmoticons, function (value) {\n        return merge({\n          keywords: [],\n          category: 'user'\n        }, value);\n      });\n    };\n    var initDatabase = function (editor, databaseUrl, databaseId) {\n      var categories = Cell(Option.none());\n      var all = Cell(Option.none());\n      var processEmojis = function (emojis) {\n        var cats = {};\n        var everything = [];\n        each(emojis, function (lib, title) {\n          var entry = {\n            title: title,\n            keywords: lib.keywords,\n            char: lib.char,\n            category: translateCategory(categoryNameMap, lib.category)\n          };\n          var current = cats[entry.category] !== undefined ? cats[entry.category] : [];\n          cats[entry.category] = current.concat([entry]);\n          everything.push(entry);\n        });\n        categories.set(Option.some(cats));\n        all.set(Option.some(everything));\n      };\n      editor.on('init', function () {\n        global$1.load(databaseId, databaseUrl).then(function (emojis) {\n          var userEmojis = getUserDefinedEmoticons(editor);\n          processEmojis(merge(emojis, userEmojis));\n        }, function (err) {\n          domGlobals.console.log('Failed to load emoticons: ' + err);\n          categories.set(Option.some({}));\n          all.set(Option.some([]));\n        });\n      });\n      var listCategory = function (category) {\n        if (category === ALL_CATEGORY) {\n          return listAll();\n        }\n        return categories.get().bind(function (cats) {\n          return Option.from(cats[category]);\n        }).getOr([]);\n      };\n      var listAll = function () {\n        return all.get().getOr([]);\n      };\n      var listCategories = function () {\n        return [ALL_CATEGORY].concat(keys(categories.get().getOr({})));\n      };\n      var waitForLoad = function () {\n        if (hasLoaded()) {\n          return global$3.resolve(true);\n        } else {\n          return new global$3(function (resolve, reject) {\n            var numRetries = 15;\n            var interval = global$2.setInterval(function () {\n              if (hasLoaded()) {\n                global$2.clearInterval(interval);\n                resolve(true);\n              } else {\n                numRetries--;\n                if (numRetries < 0) {\n                  domGlobals.console.log('Could not load emojis from url: ' + databaseUrl);\n                  global$2.clearInterval(interval);\n                  reject(false);\n                }\n              }\n            }, 100);\n          });\n        }\n      };\n      var hasLoaded = function () {\n        return categories.get().isSome() && all.get().isSome();\n      };\n      return {\n        listCategories: listCategories,\n        hasLoaded: hasLoaded,\n        waitForLoad: waitForLoad,\n        listAll: listAll,\n        listCategory: listCategory\n      };\n    };\n\n    var patternName = 'pattern';\n    var open = function (editor, database) {\n      var initialState = {\n        pattern: '',\n        results: emojisFrom(database.listAll(), '', Option.some(300))\n      };\n      var currentTab = Cell(ALL_CATEGORY);\n      var scan = function (dialogApi) {\n        var dialogData = dialogApi.getData();\n        var category = currentTab.get();\n        var candidates = database.listCategory(category);\n        var results = emojisFrom(candidates, dialogData[patternName], category === ALL_CATEGORY ? Option.some(300) : Option.none());\n        dialogApi.setData({ results: results });\n      };\n      var updateFilter = last(function (dialogApi) {\n        scan(dialogApi);\n      }, 200);\n      var searchField = {\n        label: 'Search',\n        type: 'input',\n        name: patternName\n      };\n      var resultsField = {\n        type: 'collection',\n        name: 'results'\n      };\n      var getInitialState = function () {\n        var body = {\n          type: 'tabpanel',\n          tabs: map(database.listCategories(), function (cat) {\n            return {\n              title: cat,\n              name: cat,\n              items: [\n                searchField,\n                resultsField\n              ]\n            };\n          })\n        };\n        return {\n          title: 'Emoticons',\n          size: 'normal',\n          body: body,\n          initialData: initialState,\n          onTabChange: function (dialogApi, details) {\n            currentTab.set(details.newTabName);\n            updateFilter.throttle(dialogApi);\n          },\n          onChange: updateFilter.throttle,\n          onAction: function (dialogApi, actionData) {\n            if (actionData.name === 'results') {\n              insertEmoticon(editor, actionData.value);\n              dialogApi.close();\n            }\n          },\n          buttons: [{\n              type: 'cancel',\n              text: 'Close',\n              primary: true\n            }]\n        };\n      };\n      var dialogApi = editor.windowManager.open(getInitialState());\n      dialogApi.focus(patternName);\n      if (!database.hasLoaded()) {\n        dialogApi.block('Loading emoticons...');\n        database.waitForLoad().then(function () {\n          dialogApi.redial(getInitialState());\n          updateFilter.throttle(dialogApi);\n          dialogApi.focus(patternName);\n          dialogApi.unblock();\n        }).catch(function (err) {\n          dialogApi.redial({\n            title: 'Emoticons',\n            body: {\n              type: 'panel',\n              items: [{\n                  type: 'alertbanner',\n                  level: 'error',\n                  icon: 'warning',\n                  text: '<p>Could not load emoticons</p>'\n                }]\n            },\n            buttons: [{\n                type: 'cancel',\n                text: 'Close',\n                primary: true\n              }],\n            initialData: {\n              pattern: '',\n              results: []\n            }\n          });\n          dialogApi.focus(patternName);\n          dialogApi.unblock();\n        });\n      }\n    };\n    var Dialog = { open: open };\n\n    var register = function (editor, database) {\n      var onAction = function () {\n        return Dialog.open(editor, database);\n      };\n      editor.ui.registry.addButton('emoticons', {\n        tooltip: 'Emoticons',\n        icon: 'emoji',\n        onAction: onAction\n      });\n      editor.ui.registry.addMenuItem('emoticons', {\n        text: 'Emoticons...',\n        icon: 'emoji',\n        onAction: onAction\n      });\n    };\n    var Buttons = { register: register };\n\n    function Plugin () {\n      global.add('emoticons', function (editor, pluginUrl) {\n        var databaseUrl = Settings.getEmoticonDatabaseUrl(editor, pluginUrl);\n        var databaseId = Settings.getEmoticonDatabaseId(editor);\n        var database = initDatabase(editor, databaseUrl, databaseId);\n        Buttons.register(editor, database);\n        init(editor, database);\n      });\n    }\n\n    Plugin();\n\n}(window));\n"]}