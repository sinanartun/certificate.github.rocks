{"version":3,"sources":["pagebreak/plugin.js"],"names":["global","tinymce","util","Tools","resolve","global$1","Settings","editor","getParam","getPageBreakClass","getPlaceholderHtml","transparentSrc","FilterContent","setup","separatorHtml","pageBreakSeparatorRegExp","RegExp","replace","a","on","e","content","serializer","addNodeFilter","nodes","node","className","i","length","attr","indexOf","parentNode","parent","schema","getBlockElements","name","type","value","raw","remove","Commands","register","addCommand","settings","pagebreak_split_block","insertContent","ResolveName","target","nodeName","dom","hasClass","Buttons","ui","registry","addButton","icon","tooltip","onAction","execCommand","addMenuItem","text","add"],"mappings":"CAQC,WACG,aAEA,IAAIA,EAASC,QAAQC,KAAKC,MAAMC,QAAQ,yBAEpCC,EAAWJ,QAAQC,KAAKC,MAAMC,QAAQ,eAQtCE,EANmB,SAAUC,GAC/B,OAAOA,EAAOC,SAAS,sBAAuB,6BAK5CF,EAHmB,SAAUC,GAC/B,OAAOA,EAAOC,SAAS,yBAAyB,IAO9CC,EAAoB,WACtB,MAAO,iBAELC,EAAqB,WACvB,MAAO,aAAeL,EAASM,eAAiB,2EAiC9CC,EAAgB,CAClBC,MAhCU,SAAUN,GACpB,IAAIO,EAAgBR,EAA0BC,GAC1CQ,EAA2B,IAAIC,OAAOF,EAAcG,QAAQ,gCAAiC,SAAUC,GACzG,MAAO,KAAOA,IACZ,MACJX,EAAOY,GAAG,mBAAoB,SAAUC,GACtCA,EAAEC,QAAUD,EAAEC,QAAQJ,QAAQF,EAA0BL,OAE1DH,EAAOY,GAAG,UAAW,WACnBZ,EAAOe,WAAWC,cAAc,MAAO,SAAUC,GAE/C,IADA,IAAsBC,EAAMC,EAAxBC,EAAIH,EAAMI,OACPD,KAGL,IADAD,GADAD,EAAOD,EAAMG,IACIE,KAAK,YACmC,IAAxCH,EAAUI,QAAQ,iBAAyB,CAC1D,IAAIC,EAAaN,EAAKO,OACtB,GAAIzB,EAAO0B,OAAOC,mBAAmBH,EAAWI,OAAS7B,EAA0BC,GAAS,CAC1FwB,EAAWK,KAAO,EAClBL,EAAWM,MAAQvB,EACnBiB,EAAWO,KAAM,EACjBb,EAAKc,SACL,SAEFd,EAAKW,KAAO,EACZX,EAAKY,MAAQvB,EACbW,EAAKa,KAAM,QAQnB5B,mBAAoBA,EACpBD,kBAAmBA,GAYjB+B,EAAW,CAAEC,SATF,SAAUlC,GACvBA,EAAOmC,WAAW,eAAgB,WAC5BnC,EAAOoC,SAASC,sBAClBrC,EAAOsC,cAAc,MAAQjC,EAAcF,qBAAuB,QAElEH,EAAOsC,cAAcjC,EAAcF,0BAarCoC,EAAc,CAAEjC,MAPN,SAAUN,GACtBA,EAAOY,GAAG,cAAe,SAAUC,GACP,QAAtBA,EAAE2B,OAAOC,UAAsBzC,EAAO0C,IAAIC,SAAS9B,EAAE2B,OAAQnC,EAAcH,uBAC7EW,EAAEe,KAAO,iBAsBXgB,EAAU,CAAEV,SAhBC,SAAUlC,GACzBA,EAAO6C,GAAGC,SAASC,UAAU,YAAa,CACxCC,KAAM,aACNC,QAAS,aACTC,SAAU,WACR,OAAOlD,EAAOmD,YAAY,mBAG9BnD,EAAO6C,GAAGC,SAASM,YAAY,YAAa,CAC1CC,KAAM,aACNL,KAAM,aACNE,SAAU,WACR,OAAOlD,EAAOmD,YAAY,qBAO9B1D,EAAO6D,IAAI,YAAa,SAAUtD,GAChCiC,EAASC,SAASlC,GAClB4C,EAAQV,SAASlC,GACjBK,EAAcC,MAAMN,GACpBuC,EAAYjC,MAAMN,KAxG1B","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.1.0 (2019-10-17)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var getSeparatorHtml = function (editor) {\n      return editor.getParam('pagebreak_separator', '<!-- pagebreak -->');\n    };\n    var shouldSplitBlock = function (editor) {\n      return editor.getParam('pagebreak_split_block', false);\n    };\n    var Settings = {\n      getSeparatorHtml: getSeparatorHtml,\n      shouldSplitBlock: shouldSplitBlock\n    };\n\n    var getPageBreakClass = function () {\n      return 'mce-pagebreak';\n    };\n    var getPlaceholderHtml = function () {\n      return '<img src=\"' + global$1.transparentSrc + '\" class=\"' + getPageBreakClass() + '\" data-mce-resize=\"false\" data-mce-placeholder />';\n    };\n    var setup = function (editor) {\n      var separatorHtml = Settings.getSeparatorHtml(editor);\n      var pageBreakSeparatorRegExp = new RegExp(separatorHtml.replace(/[\\?\\.\\*\\[\\]\\(\\)\\{\\}\\+\\^\\$\\:]/g, function (a) {\n        return '\\\\' + a;\n      }), 'gi');\n      editor.on('BeforeSetContent', function (e) {\n        e.content = e.content.replace(pageBreakSeparatorRegExp, getPlaceholderHtml());\n      });\n      editor.on('PreInit', function () {\n        editor.serializer.addNodeFilter('img', function (nodes) {\n          var i = nodes.length, node, className;\n          while (i--) {\n            node = nodes[i];\n            className = node.attr('class');\n            if (className && className.indexOf('mce-pagebreak') !== -1) {\n              var parentNode = node.parent;\n              if (editor.schema.getBlockElements()[parentNode.name] && Settings.shouldSplitBlock(editor)) {\n                parentNode.type = 3;\n                parentNode.value = separatorHtml;\n                parentNode.raw = true;\n                node.remove();\n                continue;\n              }\n              node.type = 3;\n              node.value = separatorHtml;\n              node.raw = true;\n            }\n          }\n        });\n      });\n    };\n    var FilterContent = {\n      setup: setup,\n      getPlaceholderHtml: getPlaceholderHtml,\n      getPageBreakClass: getPageBreakClass\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mcePageBreak', function () {\n        if (editor.settings.pagebreak_split_block) {\n          editor.insertContent('<p>' + FilterContent.getPlaceholderHtml() + '</p>');\n        } else {\n          editor.insertContent(FilterContent.getPlaceholderHtml());\n        }\n      });\n    };\n    var Commands = { register: register };\n\n    var setup$1 = function (editor) {\n      editor.on('ResolveName', function (e) {\n        if (e.target.nodeName === 'IMG' && editor.dom.hasClass(e.target, FilterContent.getPageBreakClass())) {\n          e.name = 'pagebreak';\n        }\n      });\n    };\n    var ResolveName = { setup: setup$1 };\n\n    var register$1 = function (editor) {\n      editor.ui.registry.addButton('pagebreak', {\n        icon: 'page-break',\n        tooltip: 'Page break',\n        onAction: function () {\n          return editor.execCommand('mcePageBreak');\n        }\n      });\n      editor.ui.registry.addMenuItem('pagebreak', {\n        text: 'Page break',\n        icon: 'page-break',\n        onAction: function () {\n          return editor.execCommand('mcePageBreak');\n        }\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    function Plugin () {\n      global.add('pagebreak', function (editor) {\n        Commands.register(editor);\n        Buttons.register(editor);\n        FilterContent.setup(editor);\n        ResolveName.setup(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"]}