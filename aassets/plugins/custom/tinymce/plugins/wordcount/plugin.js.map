{"version":3,"sources":["wordcount/plugin.js"],"names":["eq","call","id","me","type","delay","global","tinymce","util","Tools","resolve","noop","constant","value","identity","x","never","always","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","apply","this","regExps","characterIndices","SETS","RegExp","PUNCTUATION","none","NONE","o","isNone","fold","is","isSome","getOr","getOrThunk","thunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","equals","equals_","toArray","toString","freeze","isFunction","Array","isPrototypeOf","constructor","name","String","typeOf","nativeSlice","slice","SETS$1","from","OTHER","getType","char","setsLength","j","set","test","classify","characters","func","cache","xs","f","len","r","result","WHITESPACE$1","PUNCTUATION$1","isProtocol","str","findUrlEnd","startIndex","endIndex","findWordEnd","join","substr","getWords$1","chars","extract","options","includeWhitespace","includePunctuation","filteredChars","extractedChars","ch","push","sChars","characterMap","index","prevType","nextNextType","nextType","words","word","startOfWord","endOfWord","endOfUrl","url","findWords","global$1","getText","node","schema","blockElements","getBlockElements","shortEndedElements","getShortEndedElements","isNewline","nodeName","textBlocks","txt","treeWalker","next","nodeType","data","strLen","replace","countWords","text","split","countCharacters","countCharactersWithoutSpaces","createBodyCounter","editor","count","getBody","createSelectionCounter","selection","getRng","cloneContents","createBodyWordCounter","get","body","getWordCount","getCharacterCount","getCharacterCountWithoutSpaces","getCount","global$2","updateCount","api","fire","wordCount","charactersWithoutSpaces","fireWordCountUpdate","setup","debouncedUpdate","debounce","on","setEditorTimeout","open","windowManager","title","items","header","cells","buttons","primary","register","ui","registry","addButton","tooltip","icon","onAction","addMenuItem","add"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.1.0 (2019-10-17)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var regExps = {\n      aletter: '[A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05F3\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u10a0-\\u10c5\\u10d0-\\u10fa\\u10fc\\u1100-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1a00-\\u1a16\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bc0-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u24B6-\\u24E9\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2d00-\\u2d25\\u2d30-\\u2d65\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005\\u303b\\u303c\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790\\ua791\\ua7a0-\\ua7a9\\ua7fa-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]',\n      midnumlet: '[-\\'\\\\.\\u2018\\u2019\\u2024\\uFE52\\uFF07\\uFF0E]',\n      midletter: '[:\\xB7\\xB7\\u05F4\\u2027\\uFE13\\uFE55\\uFF1A]',\n      midnum: '[\\xB1+*/,;;\\u0589\\u060C\\u060D\\u066C\\u07F8\\u2044\\uFE10\\uFE14\\uFE50\\uFE54\\uFF0C\\uFF1B]',\n      numeric: '[0-9\\u0660-\\u0669\\u066B\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\uaa50-\\uaa59\\uabf0-\\uabf9]',\n      cr: '\\\\r',\n      lf: '\\\\n',\n      newline: '[\\x0B\\f\\x85\\u2028\\u2029]',\n      extend: '[\\u0300-\\u036f\\u0483-\\u0489\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u065f\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a70\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0f18\\u0f19\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f\\u109a-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b6-\\u17d3\\u17dd\\u180b-\\u180d\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u19b0-\\u19c0\\u19c8\\u19c9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1baa\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u20d0-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua66f-\\uA672\\ua67c\\ua67d\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8e0-\\ua8f1\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uabe3-\\uabea\\uabec\\uabed\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\uff9e\\uff9f]',\n      format: '[\\xAD\\u0600-\\u0603\\u06DD\\u070F\\u17b4\\u17b5\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\uFEFF\\uFFF9-\\uFFFB]',\n      katakana: '[\\u3031-\\u3035\\u309B\\u309C\\u30A0-\\u30fa\\u30fc-\\u30ff\\u31f0-\\u31ff\\u32D0-\\u32FE\\u3300-\\u3357\\uff66-\\uff9d]',\n      extendnumlet: '[=_\\u203f\\u2040\\u2054\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff3f\\u2200-\\u22FF<>]',\n      punctuation: '[!-#%-*,-\\\\/:;?@\\\\[-\\\\]_{}\\xA1\\xAB\\xB7\\xBB\\xBF;\\xB7\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1361-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u3008\\u3009\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30\\u2E31\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uff3f\\uFF5B\\uFF5D\\uFF5F-\\uFF65]'\n    };\n    var characterIndices = {\n      ALETTER: 0,\n      MIDNUMLET: 1,\n      MIDLETTER: 2,\n      MIDNUM: 3,\n      NUMERIC: 4,\n      CR: 5,\n      LF: 6,\n      NEWLINE: 7,\n      EXTEND: 8,\n      FORMAT: 9,\n      KATAKANA: 10,\n      EXTENDNUMLET: 11,\n      AT: 12,\n      OTHER: 13\n    };\n    var SETS = [\n      new RegExp(regExps.aletter),\n      new RegExp(regExps.midnumlet),\n      new RegExp(regExps.midletter),\n      new RegExp(regExps.midnum),\n      new RegExp(regExps.numeric),\n      new RegExp(regExps.cr),\n      new RegExp(regExps.lf),\n      new RegExp(regExps.newline),\n      new RegExp(regExps.extend),\n      new RegExp(regExps.format),\n      new RegExp(regExps.katakana),\n      new RegExp(regExps.extendnumlet),\n      new RegExp('@')\n    ];\n    var EMPTY_STRING = '';\n    var PUNCTUATION = new RegExp('^' + regExps.punctuation + '$');\n    var WHITESPACE = /^\\s+$/;\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isFunction = isType('function');\n\n    var nativeSlice = Array.prototype.slice;\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var from = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var SETS$1 = SETS;\n    var OTHER = characterIndices.OTHER;\n    var getType = function (char) {\n      var type = OTHER;\n      var setsLength = SETS$1.length;\n      for (var j = 0; j < setsLength; ++j) {\n        var set = SETS$1[j];\n        if (set && set.test(char)) {\n          type = j;\n          break;\n        }\n      }\n      return type;\n    };\n    var memoize = function (func) {\n      var cache = {};\n      return function (char) {\n        if (cache[char]) {\n          return cache[char];\n        } else {\n          var result = func(char);\n          cache[char] = result;\n          return result;\n        }\n      };\n    };\n    var classify = function (characters) {\n      var memoized = memoize(getType);\n      return map(characters, memoized);\n    };\n\n    var isWordBoundary = function (map, index) {\n      var prevType;\n      var type = map[index];\n      var nextType = map[index + 1];\n      var nextNextType;\n      if (index < 0 || index > map.length - 1 && index !== 0) {\n        return false;\n      }\n      if (type === characterIndices.ALETTER && nextType === characterIndices.ALETTER) {\n        return false;\n      }\n      nextNextType = map[index + 2];\n      if (type === characterIndices.ALETTER && (nextType === characterIndices.MIDLETTER || nextType === characterIndices.MIDNUMLET || nextType === characterIndices.AT) && nextNextType === characterIndices.ALETTER) {\n        return false;\n      }\n      prevType = map[index - 1];\n      if ((type === characterIndices.MIDLETTER || type === characterIndices.MIDNUMLET || nextType === characterIndices.AT) && nextType === characterIndices.ALETTER && prevType === characterIndices.ALETTER) {\n        return false;\n      }\n      if ((type === characterIndices.NUMERIC || type === characterIndices.ALETTER) && (nextType === characterIndices.NUMERIC || nextType === characterIndices.ALETTER)) {\n        return false;\n      }\n      if ((type === characterIndices.MIDNUM || type === characterIndices.MIDNUMLET) && nextType === characterIndices.NUMERIC && prevType === characterIndices.NUMERIC) {\n        return false;\n      }\n      if (type === characterIndices.NUMERIC && (nextType === characterIndices.MIDNUM || nextType === characterIndices.MIDNUMLET) && nextNextType === characterIndices.NUMERIC) {\n        return false;\n      }\n      if (type === characterIndices.EXTEND || type === characterIndices.FORMAT || prevType === characterIndices.EXTEND || prevType === characterIndices.FORMAT || nextType === characterIndices.EXTEND || nextType === characterIndices.FORMAT) {\n        return false;\n      }\n      if (type === characterIndices.CR && nextType === characterIndices.LF) {\n        return false;\n      }\n      if (type === characterIndices.NEWLINE || type === characterIndices.CR || type === characterIndices.LF) {\n        return true;\n      }\n      if (nextType === characterIndices.NEWLINE || nextType === characterIndices.CR || nextType === characterIndices.LF) {\n        return true;\n      }\n      if (type === characterIndices.KATAKANA && nextType === characterIndices.KATAKANA) {\n        return false;\n      }\n      if (nextType === characterIndices.EXTENDNUMLET && (type === characterIndices.ALETTER || type === characterIndices.NUMERIC || type === characterIndices.KATAKANA || type === characterIndices.EXTENDNUMLET)) {\n        return false;\n      }\n      if (type === characterIndices.EXTENDNUMLET && (nextType === characterIndices.ALETTER || nextType === characterIndices.NUMERIC || nextType === characterIndices.KATAKANA)) {\n        return false;\n      }\n      if (type === characterIndices.AT) {\n        return false;\n      }\n      return true;\n    };\n\n    var EMPTY_STRING$1 = EMPTY_STRING;\n    var WHITESPACE$1 = WHITESPACE;\n    var PUNCTUATION$1 = PUNCTUATION;\n    var isProtocol = function (str) {\n      return str === 'http' || str === 'https';\n    };\n    var findWordEnd = function (characters, startIndex) {\n      var i;\n      for (i = startIndex; i < characters.length; i++) {\n        if (WHITESPACE$1.test(characters[i])) {\n          break;\n        }\n      }\n      return i;\n    };\n    var findUrlEnd = function (characters, startIndex) {\n      var endIndex = findWordEnd(characters, startIndex + 1);\n      var peakedWord = characters.slice(startIndex + 1, endIndex).join(EMPTY_STRING$1);\n      return peakedWord.substr(0, 3) === '://' ? endIndex : startIndex;\n    };\n    var findWords = function (chars, sChars, characterMap, options) {\n      var words = [];\n      var word = [];\n      for (var i = 0; i < characterMap.length; ++i) {\n        word.push(chars[i]);\n        if (isWordBoundary(characterMap, i)) {\n          var ch = sChars[i];\n          if ((options.includeWhitespace || !WHITESPACE$1.test(ch)) && (options.includePunctuation || !PUNCTUATION$1.test(ch))) {\n            var startOfWord = i - word.length + 1;\n            var endOfWord = i + 1;\n            var str = sChars.slice(startOfWord, endOfWord).join(EMPTY_STRING$1);\n            if (isProtocol(str)) {\n              var endOfUrl = findUrlEnd(sChars, i);\n              var url = chars.slice(endOfWord, endOfUrl);\n              Array.prototype.push.apply(word, url);\n              i = endOfUrl;\n            }\n            words.push(word);\n          }\n          word = [];\n        }\n      }\n      return words;\n    };\n    var getDefaultOptions = function () {\n      return {\n        includeWhitespace: false,\n        includePunctuation: false\n      };\n    };\n    var getWords = function (chars, extract, options) {\n      options = __assign(__assign({}, getDefaultOptions()), options);\n      var filteredChars = [];\n      var extractedChars = [];\n      for (var i = 0; i < chars.length; i++) {\n        var ch = extract(chars[i]);\n        if (ch !== '\\uFEFF') {\n          filteredChars.push(chars[i]);\n          extractedChars.push(ch);\n        }\n      }\n      var characterMap = classify(extractedChars);\n      return findWords(filteredChars, extractedChars, characterMap, options);\n    };\n\n    var getWords$1 = getWords;\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.TreeWalker');\n\n    var getText = function (node, schema) {\n      var blockElements = schema.getBlockElements();\n      var shortEndedElements = schema.getShortEndedElements();\n      var isNewline = function (node) {\n        return blockElements[node.nodeName] || shortEndedElements[node.nodeName];\n      };\n      var textBlocks = [];\n      var txt = '';\n      var treeWalker = new global$1(node, node);\n      while (node = treeWalker.next()) {\n        if (node.nodeType === 3) {\n          txt += node.data;\n        } else if (isNewline(node) && txt.length) {\n          textBlocks.push(txt);\n          txt = '';\n        }\n      }\n      if (txt.length) {\n        textBlocks.push(txt);\n      }\n      return textBlocks;\n    };\n\n    var strLen = function (str) {\n      return str.replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, '_').length;\n    };\n    var countWords = function (node, schema) {\n      var text = getText(node, schema).join('\\n');\n      return getWords$1(text.split(''), identity).length;\n    };\n    var countCharacters = function (node, schema) {\n      var text = getText(node, schema).join('');\n      return strLen(text);\n    };\n    var countCharactersWithoutSpaces = function (node, schema) {\n      var text = getText(node, schema).join('').replace(/\\s/g, '');\n      return strLen(text);\n    };\n\n    var createBodyCounter = function (editor, count) {\n      return function () {\n        return count(editor.getBody(), editor.schema);\n      };\n    };\n    var createSelectionCounter = function (editor, count) {\n      return function () {\n        return count(editor.selection.getRng().cloneContents(), editor.schema);\n      };\n    };\n    var createBodyWordCounter = function (editor) {\n      return createBodyCounter(editor, countWords);\n    };\n    var get = function (editor) {\n      return {\n        body: {\n          getWordCount: createBodyWordCounter(editor),\n          getCharacterCount: createBodyCounter(editor, countCharacters),\n          getCharacterCountWithoutSpaces: createBodyCounter(editor, countCharactersWithoutSpaces)\n        },\n        selection: {\n          getWordCount: createSelectionCounter(editor, countWords),\n          getCharacterCount: createSelectionCounter(editor, countCharacters),\n          getCharacterCountWithoutSpaces: createSelectionCounter(editor, countCharactersWithoutSpaces)\n        },\n        getCount: createBodyWordCounter(editor)\n      };\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var fireWordCountUpdate = function (editor, api) {\n      editor.fire('wordCountUpdate', {\n        wordCount: {\n          words: api.body.getWordCount(),\n          characters: api.body.getCharacterCount(),\n          charactersWithoutSpaces: api.body.getCharacterCountWithoutSpaces()\n        }\n      });\n    };\n\n    var updateCount = function (editor, api) {\n      fireWordCountUpdate(editor, api);\n    };\n    var setup = function (editor, api, delay) {\n      var debouncedUpdate = global$2.debounce(function () {\n        return updateCount(editor, api);\n      }, delay);\n      editor.on('init', function () {\n        updateCount(editor, api);\n        global$2.setEditorTimeout(editor, function () {\n          editor.on('SetContent BeforeAddUndo Undo Redo keyup', debouncedUpdate);\n        }, 0);\n      });\n    };\n\n    var open = function (editor, api) {\n      editor.windowManager.open({\n        title: 'Word Count',\n        body: {\n          type: 'panel',\n          items: [{\n              type: 'table',\n              header: [\n                'Count',\n                'Document',\n                'Selection'\n              ],\n              cells: [\n                [\n                  'Words',\n                  String(api.body.getWordCount()),\n                  String(api.selection.getWordCount())\n                ],\n                [\n                  'Characters (no spaces)',\n                  String(api.body.getCharacterCountWithoutSpaces()),\n                  String(api.selection.getCharacterCountWithoutSpaces())\n                ],\n                [\n                  'Characters',\n                  String(api.body.getCharacterCount()),\n                  String(api.selection.getCharacterCount())\n                ]\n              ]\n            }]\n        },\n        buttons: [{\n            type: 'cancel',\n            name: 'close',\n            text: 'Close',\n            primary: true\n          }]\n      });\n    };\n\n    var register = function (editor, api) {\n      editor.ui.registry.addButton('wordcount', {\n        tooltip: 'Word count',\n        icon: 'character-count',\n        onAction: function () {\n          return open(editor, api);\n        }\n      });\n      editor.ui.registry.addMenuItem('wordcount', {\n        text: 'Word count',\n        icon: 'character-count',\n        onAction: function () {\n          return open(editor, api);\n        }\n      });\n    };\n\n    function Plugin (delay) {\n      if (delay === void 0) {\n        delay = 300;\n      }\n      global.add('wordcount', function (editor) {\n        var api = get(editor);\n        register(editor, api);\n        setup(editor, api, delay);\n        return api;\n      });\n    }\n\n    Plugin();\n\n}());\n"]}