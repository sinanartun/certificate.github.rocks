{"version":3,"sources":["spellchecker/plugin.js"],"names":["domGlobals","Cell","initial","value","get","set","v","clone","global","tinymce","util","Tools","resolve","DetectProPlugin","hasProPlugin","editor","test","settings","plugins","window","console","log","global$1","global$2","global$3","Events","fire","Settings","getLanguages","getParam","getLanguage","defaultLanguage","getRpcUrl","getSpellcheckerCallback","getSpellcheckerWordcharPattern","defaultPattern","RegExp","isContentEditableFalse","node","nodeType","contentEditable","DomTextMatcher","m","text","blockElementsMap","hiddenTextElementsMap","shortEndedElementsMap","matches","dom","createMatch","data","Error","start","index","end","length","getWrappersByIndex","elements","getElementsByTagName","wrappers","i","element","dataIndex","getAttribute","className","indexOf","push","match","each","callback","l","this","unwrap","parentNode","insertBefore","firstChild","removeChild","rangeFromMatch","rng","createRng","setStartBefore","setEndAfter","schema","getBlockElements","getWhiteSpaceElements","getShortEndedElements","getText","txt","nodeName","nextSibling","filter","filteredMatches","reset","splice","matchFromElement","elementFromMatch","find","regex","exec","add","substr","wrap","replaceFn","startNode","endNode","startNodeIndex","endNodeIndex","matchLocation","innerNodes","atIndex","curNode","matchIndex","slice","sort","a","b","shift","out","stepThroughMatches","makeReplacementNode","fill","stencil","cloneNode","setAttribute","appendChild","doc","createTextNode","range","before","after","node_1","substring","el","elA","innerNode","innerEl","replaceChild","elB","genReplacer","replace","deleteContents","insertNode","getTextMatcher","textMatcherState","textMatcher","getBody","sendRpcCall","pluginUrl","currentLanguageState","name","successCallback","errorCallback","userSpellcheckCallback","method","doneCallback","lang","postData","key","encodeURIComponent","send","url","toAbsolute","type","content_type","success","result","parseResult","JSON","parse","error","message","translate","defaultSpellcheckCallback","call","spellchecker","checkIfFinished","startedState","select","finish","bookmark","selection","getBookmark","moveToBookmark","getElmIndex","elm","markErrors","lastSuggestionsState","hasDictionarySupport","dictionary","suggestions","words","setProgressState","obj","_","isEmpty","notificationManager","open","create","class","aria-invalid","data-mce-bogus","data-mce-word","Actions","spellcheck","focus","addToDictionary","word","spans","remove","ignoreWord","all","collapse","span","findSpansByIndex","nodes","toArray","nodeIndex","toString","Api","getWordCharPattern","Commands","register","addCommand","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","apply","spellcheckerEvents","Buttons","languageValues","items","languageMenuItems","map","split","langPair","getItems","languageValue","selectable","startSpellchecking","buttonArgs","tooltip","onAction","icon","onSetup","buttonApi","setButtonState","setActive","on","off","splitButtonArgs","fetch","languageItem","onItemAction","splitButtonApi","ui","registry","addSplitButton","addToggleButton","addToggleMenuItem","menuApi","setMenuItemCheck","SuggestionsMenu","setup","addContextMenu","update","target","setRng","suggestion","insertContent","encode","getSuggestions"],"mappings":"CAQC,SAAUA,GACP,aAEA,IAAIC,EAAO,SAAUC,GACnB,IAAIC,EAAQD,EACRE,EAAM,WACR,OAAOD,GAQT,MAAO,CACLC,IAAKA,EACLC,IARQ,SAAUC,GAClBH,EAAQG,GAQRC,MANU,WACV,OAAON,EAAKG,QASZI,EAASC,QAAQC,KAAKC,MAAMC,QAAQ,yBAYpCC,EAAkB,CAAEC,aAVL,SAAUC,GAC3B,SAAI,sCAAsCC,KAAKD,EAAOE,SAASC,WAAYV,EAAOJ,IAAI,8BAC3C,IAA9BJ,EAAWmB,OAAOC,SAA2BpB,EAAWmB,OAAOC,QAAQC,KAChFrB,EAAWmB,OAAOC,QAAQC,IAAI,iHAEzB,MAOPC,EAAWb,QAAQC,KAAKC,MAAMC,QAAQ,sBAEtCW,EAAWd,QAAQC,KAAKC,MAAMC,QAAQ,oBAEtCY,EAAWf,QAAQC,KAAKC,MAAMC,QAAQ,oBAQtCa,EANsB,SAAUV,GAClC,OAAOA,EAAOW,KAAK,oBAKjBD,EAHoB,SAAUV,GAChC,OAAOA,EAAOW,KAAK,kBAyBjBC,EAAW,CACbC,aAnBiB,SAAUb,GAE3B,OAAOA,EAAOc,SAAS,yBADA,gIAmBvBC,YAhBgB,SAAUf,GAC1B,IAAIgB,EAAkBhB,EAAOc,SAAS,WAAY,MAClD,OAAOd,EAAOc,SAAS,wBAAyBE,IAehDC,UAbc,SAAUjB,GACxB,OAAOA,EAAOc,SAAS,yBAavBI,wBAX4B,SAAUlB,GACtC,OAAOA,EAAOc,SAAS,0BAWvBK,+BATmC,SAAUnB,GAC7C,IAAIoB,EAAiB,IAAIC,OAAO,gEAAsK,KACtM,OAAOrB,EAAOc,SAAS,gCAAiCM,KAU1D,SAASE,EAAuBC,GAC9B,OAAOA,GAA0B,IAAlBA,EAAKC,UAA2C,UAAzBD,EAAKE,gBAE7C,IAAIC,EAAiB,SAAUH,EAAMvB,GACnC,IAAI2B,EAAiBC,EAEjBC,EAAkBC,EAAuBC,EAFtCC,EAAU,GACbC,EAAMjC,EAAOiC,IAKjB,SAASC,EAAYP,EAAGQ,GACtB,IAAKR,EAAE,GACL,MAAM,IAAIS,MAAM,2DAElB,MAAO,CACLC,MAAOV,EAAEW,MACTC,IAAKZ,EAAEW,MAAQX,EAAE,GAAGa,OACpBZ,KAAMD,EAAE,GACRQ,KAAMA,GA2JV,SAASM,EAAmBH,GAC1B,IAAII,EAAWnB,EAAKoB,qBAAqB,KAAMC,EAAW,GAC1DN,EAAyB,iBAAVA,EAAqB,GAAKA,EAAQ,KACjD,IAAK,IAAIO,EAAI,EAAGA,EAAIH,EAASF,OAAQK,IAAK,CACxC,IAAIC,EAAUJ,EAASG,GAAIE,EAAYD,EAAQE,aAAa,kBAC1C,OAAdD,GAAsBA,EAAUP,SAPqB,IAOFM,EAP9CG,UAAUC,QAAQ,2BAQrBH,IAAcT,GAAmB,OAAVA,GACzBM,EAASO,KAAKL,IAIpB,OAAOF,EAET,SAASM,EAAQE,GAEf,IADA,IAAIP,EAAIb,EAAQQ,OACTK,KACL,GAAIb,EAAQa,KAAOO,EACjB,OAAOP,EAGX,OAAQ,EAYV,SAASQ,EAAKC,GACZ,IAAK,IAAIT,EAAI,EAAGU,EAAIvB,EAAQQ,OAAQK,EAAIU,IACN,IAA5BD,EAAStB,EAAQa,GAAIA,GADgBA,KAK3C,OAAOW,KAgBT,SAASC,EAAOL,GACd,IAAIP,EA/DiBC,EAgEjBJ,EAAWD,EAAmBW,EAAQF,EAAQE,GAAS,MAE3D,IADAP,EAAIH,EAASF,OACNK,MAlEcC,EAmELJ,EAASG,IAlEAa,WACdC,aAAab,EAAQc,WAAYd,GAC5CA,EAAQY,WAAWG,YAAYf,GAkE/B,OAAOU,KAiBT,SAASM,EAAeV,GACtB,IAAIR,EAAWH,EAAmBS,EAAQE,IACtCW,EAAM/D,EAAOiC,IAAI+B,YAGrB,OAFAD,EAAIE,eAAerB,EAAS,IAC5BmB,EAAIG,YAAYtB,EAASA,EAASJ,OAAS,IACpCuB,EAgBT,OAzQAlC,EAAmB7B,EAAOmE,OAAOC,mBACjCtC,EAAwB9B,EAAOmE,OAAOE,wBACtCtC,EAAwB/B,EAAOmE,OAAOG,wBAuQ/B,CACL1C,KAFFA,EA1PA,SAAS2C,EAAQhD,GACf,IAAIiD,EACJ,GAAsB,IAAlBjD,EAAKC,SACP,OAAOD,EAAKY,KAEd,GAAIL,EAAsBP,EAAKkD,YAAc5C,EAAiBN,EAAKkD,UACjE,MAAO,GAET,GAAInD,EAAuBC,GACzB,MAAO,KAMT,GAJAiD,EAAM,IACF3C,EAAiBN,EAAKkD,WAAa1C,EAAsBR,EAAKkD,aAChED,GAAO,MAELjD,EAAOA,EAAKqC,WACd,GACEY,GAAOD,EAAQhD,SACRA,EAAOA,EAAKmD,aAEvB,OAAOF,EAsOFD,CAAQhD,GAGbS,QAASA,EACTqB,KAAMA,EACNsB,OAjFF,SAAgBrB,GACd,IAAIsB,EAAkB,GAOtB,OANAvB,EAAK,SAAUD,EAAOP,GAChBS,EAASF,EAAOP,IAClB+B,EAAgBzB,KAAKC,KAGzBpB,EAAU4C,EACHpB,MA0EPqB,MAXF,WAGE,OAFA7C,EAAQ8C,OAAO,EAAG9C,EAAQQ,QAC1BiB,IACOD,MASPuB,iBA1CF,SAA0BjC,GACxB,OAAOd,EAAQc,EAAQE,aAAa,oBA0CpCgC,iBAxCF,SAA0B5B,GACxB,OAAOX,EAAmBS,EAAQE,IAAQ,IAwC1C6B,KA7DF,SAAcC,EAAO/C,GACnB,GAAIP,GAAQsD,EAAMzF,OAChB,KAAOkC,EAAIuD,EAAMC,KAAKvD,IACpBI,EAAQmB,KAAKjB,EAAYP,EAAGQ,IAGhC,OAAOqB,MAwDP4B,IAvCF,SAAa/C,EAAOG,EAAQL,GAO1B,OANAH,EAAQmB,KAAK,CACXd,MAAOA,EACPE,IAAKF,EAAQG,EACbZ,KAAMA,EAAKyD,OAAOhD,EAAOG,GACzBL,KAAMA,IAEDqB,MAiCP8B,KArEF,SAAchC,GAIZ,OAHItB,EAAQQ,QA3Kd,SAA4BjB,EAAMS,EAASuD,GACzC,IAAIC,EAAWC,EAASC,EAAgBC,EAA4DC,EAA9CC,EAAa,GAAIC,EAAU,EAAGC,EAAUxE,EAAqByE,EAAa,GAChIhE,EAAUA,EAAQiE,MAAM,IAChBC,KAAK,SAAUC,EAAGC,GACxB,OAAOD,EAAE9D,MAAQ+D,EAAE/D,QAErBuD,EAAgB5D,EAAQqE,QACxBC,EACE,OAAa,CAiBX,IAhBIzE,EAAiBkE,EAAQtB,WAAa1C,EAAsBgE,EAAQtB,WAAanD,EAAuByE,KAC1GD,IAEuB,IAArBC,EAAQvE,YACLiE,GAAWM,EAAQvD,OAASsD,GAAWF,EAAcrD,KACxDkD,EAAUM,EACVJ,EAAeC,EAAcrD,IAAMuD,GAC1BN,GACTK,EAAW1C,KAAK4C,IAEbP,GAAaO,EAAQvD,OAASsD,EAAUF,EAAcvD,QACzDmD,EAAYO,EACZL,EAAiBE,EAAcvD,MAAQyD,GAEzCA,GAAWC,EAAQvD,QAEjBgD,GAAaC,GAgBf,GAfAM,EAAUR,EAAU,CAClBC,UAAWA,EACXE,eAAgBA,EAChBD,QAASA,EACTE,aAAcA,EACdE,WAAYA,EACZzC,MAAOwC,EAAchE,KACrBoE,WAAYA,IAEdF,GAAWL,EAAQjD,OAASmD,EAC5BH,EAAY,KACZC,EAAU,KACVI,EAAa,GAEbG,MADAJ,EAAgB5D,EAAQqE,SAGtB,WAEG,GAAMvE,EAAsBiE,EAAQtB,YAAa5C,EAAiBkE,EAAQtB,YAAcsB,EAAQnC,YAKhG,GAAImC,EAAQrB,YAAa,CAC9BqB,EAAUA,EAAQrB,YAClB,eANA,IAAKpD,EAAuByE,GAAU,CACpCA,EAAUA,EAAQnC,WAClB,SAMJ,OAAa,CACX,GAAImC,EAAQrB,YAAa,CACvBqB,EAAUA,EAAQrB,YAClB,MACK,GAAIqB,EAAQrC,aAAenC,EAGhC,MAAM+E,EAFNP,EAAUA,EAAQrC,aAkHxB6C,CAAmBhF,EAAMS,EA3G7B,SAAqBsB,GACnB,SAASkD,EAAoBC,EAAMT,GACjC,IAAI5C,EAAQpB,EAAQgE,GACf5C,EAAMsD,UACTtD,EAAMsD,QAAUpD,EAASF,IAE3B,IAAI5D,EAAQ4D,EAAMsD,QAAQC,WAAU,GAKpC,OAJAnH,EAAMoH,aAAa,iBAAkBZ,GACjCS,GACFjH,EAAMqH,YAAY5E,EAAI6E,IAAIC,eAAeN,IAEpCjH,EAET,OAAO,SAAUwH,GACf,IAAIC,EACAC,EACAxD,EACA8B,EAAYwB,EAAMxB,UAClBC,EAAUuB,EAAMvB,QAChBO,EAAagB,EAAMhB,WACnBc,EAAM7E,EAAI6E,IACd,GAAItB,IAAcC,EAAS,CACzB,IAAI0B,EAAS3B,EACb9B,EAAayD,EAAOzD,WAChBsD,EAAMtB,eAAiB,IACzBuB,EAASH,EAAIC,eAAeI,EAAOhF,KAAKiF,UAAU,EAAGJ,EAAMtB,iBAC3DhC,EAAWC,aAAasD,EAAQE,IAElC,IAAIE,EAAKb,EAAoBQ,EAAM5D,MAAO4C,GAO1C,OANAtC,EAAWC,aAAa0D,EAAIF,GACxBH,EAAMrB,aAAewB,EAAO3E,SAC9B0E,EAAQJ,EAAIC,eAAeI,EAAOhF,KAAKiF,UAAUJ,EAAMrB,eACvDjC,EAAWC,aAAauD,EAAOC,IAEjCA,EAAOzD,WAAWG,YAAYsD,GACvBE,EAETJ,EAASH,EAAIC,eAAevB,EAAUrD,KAAKiF,UAAU,EAAGJ,EAAMtB,iBAC9DwB,EAAQJ,EAAIC,eAAetB,EAAQtD,KAAKiF,UAAUJ,EAAMrB,eAExD,IADA,IAAI2B,EAAMd,EAAoBhB,EAAUrD,KAAKiF,UAAUJ,EAAMtB,gBAAiBM,GACrEnD,EAAI,EAAGU,EAAIyD,EAAMnB,WAAWrD,OAAQK,EAAIU,IAAKV,EAAG,CACvD,IAAI0E,EAAYP,EAAMnB,WAAWhD,GAC7B2E,EAAUhB,EAAoBe,EAAUpF,KAAM6D,GAClDuB,EAAU7D,WAAW+D,aAAaD,EAASD,GAE7C,IAAIG,EAAMlB,EAAoBf,EAAQtD,KAAKiF,UAAU,EAAGJ,EAAMrB,cAAeK,GAS7E,OARAtC,EAAa8B,EAAU9B,YACZC,aAAasD,EAAQzB,GAChC9B,EAAWC,aAAa2D,EAAK9B,GAC7B9B,EAAWG,YAAY2B,IACvB9B,EAAa+B,EAAQ/B,YACVC,aAAa+D,EAAKjC,GAC7B/B,EAAWC,aAAauD,EAAOzB,GAC/B/B,EAAWG,YAAY4B,GAChBiC,GAqD2BC,CAAYrE,IAEzCE,MAkEPC,OAAQA,EACRmE,QA1BF,SAAiBxE,EAAOxB,GACtB,IAAImC,EAAMD,EAAeV,GAKzB,OAJAW,EAAI8D,iBACAjG,EAAKY,OAAS,GAChBuB,EAAI+D,WAAW9H,EAAOiC,IAAI6E,IAAIC,eAAenF,IAExCmC,GAqBPD,eAAgBA,EAChBZ,QAASA,IAIT6E,EAAiB,SAAU/H,EAAQgI,GACrC,IAAKA,EAAiB3I,MAAO,CAC3B,IAAI4I,EAAcvG,EAAe1B,EAAOkI,UAAWlI,GACnDgI,EAAiB1I,IAAI2I,GAEvB,OAAOD,EAAiB3I,OA6CtB8I,EAAc,SAAUnI,EAAQoI,EAAWC,EAAsBC,EAAMnG,EAAMoG,EAAiBC,GAChG,IAAIC,EAAyB7H,EAASM,wBAAwBlB,IACrCyI,GAvCK,SAAUzI,EAAQoI,EAAWC,GAC3D,OAAO,SAAUK,EAAQ9G,EAAM+G,EAAcH,GAC3C,IAAIrG,EAAO,CACTuG,OAAQA,EACRE,KAAMP,EAAqBhJ,OAEzBwJ,EAAW,GACf1G,EAAgB,oBAAXuG,EAA+B,OAAS,QAAU9G,EACvDrB,EAAS8C,KAAKlB,EAAM,SAAU/C,EAAO0J,GAC/BD,IACFA,GAAY,KAEdA,GAAYC,EAAM,IAAMC,mBAAmB3J,KAE7CqB,EAASuI,KAAK,CACZC,IAAK,IAAIzI,EAAS4H,GAAWc,WAAWtI,EAASK,UAAUjB,IAC3DmJ,KAAM,OACNC,aAAc,oCACdjH,KAAM0G,EACNQ,QAAS,SAAUC,GACjB,IAAIC,EAAcC,KAAKC,MAAMH,GAC7B,GAAKC,EAGMA,EAAYG,MACrBlB,EAAce,EAAYG,OAE1Bf,EAAaY,OANG,CAChB,IAAII,EAAU3J,EAAO4J,UAAU,uCAC/BpB,EAAcmB,KAOlBD,MAAO,WACL,IAAIC,EAAU3J,EAAO4J,UAAU,yCAA2ChJ,EAASK,UAAUjB,GAAUA,EAAO4J,UAAU,KACxHpB,EAAcmB,OAOuDE,CAA0B7J,EAAQoI,EAAWC,IACrGyB,KAAK9J,EAAOG,QAAQ4J,aAAczB,EAAMnG,EAAMoG,EAAiBC,IAqBhFwB,EAAkB,SAAUhK,EAAQiK,EAAcjC,GAC/ChI,EAAOiC,IAAIiI,OAAO,8BAA8B1H,QACnD2H,EAAOnK,EAAQiK,EAAcjC,IA8B7BmC,EAAS,SAAUnK,EAAQiK,EAAcjC,GAC3C,IAAIoC,EAAWpK,EAAOqK,UAAUC,cAIhC,GAHAvC,EAAe/H,EAAQgI,GAAkBnD,QACzC7E,EAAOqK,UAAUE,eAAeH,GAChCpC,EAAiB1I,IAAI,MACjB2K,EAAa5K,MAGf,OAFA4K,EAAa3K,KAAI,GACjBoB,EAAyBV,IAClB,GAGPwK,EAAc,SAAUC,GAC1B,IAAIrL,EAAQqL,EAAIzH,aAAa,kBAC7B,MAAqB,iBAAV5D,EACF,GAAKA,EAEPA,GAmBLsL,EAAa,SAAU1K,EAAQiK,EAAcjC,EAAkB2C,EAAsBxI,GACvF,IAAIyI,IAAyBzI,EAAK0I,WAC9BC,EAAc3I,EAAK4I,MAEvB,GADA/K,EAAOgL,kBAAiB,GAzIZ,SAAUC,GACtB,IAAK,IAAIC,KAAKD,EACZ,OAAO,EAET,OAAO,EAsIHE,CAAQL,GAAc,CACxB,IAAInB,EAAU3J,EAAO4J,UAAU,0BAM/B,OALA5J,EAAOoL,oBAAoBC,KAAK,CAC9BzJ,KAAM+H,EACNR,KAAM,cAERc,EAAa3K,KAAI,GAGnBqL,EAAqBrL,IAAI,CACvBwL,YAAaA,EACbF,qBAAsBA,IAExB,IAAIR,EAAWpK,EAAOqK,UAAUC,cAChCvC,EAAe/H,EAAQgI,GAAkB/C,KAAKrE,EAASO,+BAA+BnB,IAAS2E,OAAO,SAAUvB,GAC9G,QAAS0H,EAAY1H,EAAMxB,QAC1B0D,KAAK,SAAUlC,GAChB,OAAOpD,EAAOiC,IAAIqJ,OAAO,OAAQ,CAC/BC,MAAS,wBACTC,eAAgB,WAChBC,iBAAkB,EAClBC,gBAAiBtI,EAAMxB,SAG3B5B,EAAOqK,UAAUE,eAAeH,GAChCH,EAAa3K,KAAI,GACjBoB,EAA2BV,IAEzB2L,EAAU,CACZC,WAvHe,SAAU5L,EAAQoI,EAAW6B,EAAcjC,EAAkB2C,EAAsBtC,GAC9F8B,EAAOnK,EAAQiK,EAAcjC,KAcjChI,EAAOgL,kBAAiB,GACxB7C,EAAYnI,EAAQoI,EAAWC,EAAsB,aAAcN,EAAe/H,EAAQgI,GAAkBpG,KAJtF,SAAUO,GAC9BuI,EAAW1K,EAAQiK,EAAcjC,EAAkB2C,EAAsBxI,IATvD,SAAUwH,GAC5B3J,EAAOoL,oBAAoBC,KAAK,CAC9BzJ,KAAM+H,EACNR,KAAM,UAERnJ,EAAOgL,kBAAiB,GACxBb,EAAOnK,EAAQiK,EAAcjC,KAO/BhI,EAAO6L,UAuGP7B,gBAAiBA,EACjB8B,gBAjGoB,SAAU9L,EAAQoI,EAAW6B,EAAcjC,EAAkBK,EAAsB0D,EAAMC,GAC7GhM,EAAOgL,kBAAiB,GACxB7C,EAAYnI,EAAQoI,EAAWC,EAAsB,kBAAmB0D,EAAM,WAC5E/L,EAAOgL,kBAAiB,GACxBhL,EAAOiC,IAAIgK,OAAOD,GAAO,GACzBhC,EAAgBhK,EAAQiK,EAAcjC,IACrC,SAAU2B,GACX3J,EAAOoL,oBAAoBC,KAAK,CAC9BzJ,KAAM+H,EACNR,KAAM,UAERnJ,EAAOgL,kBAAiB,MAuF1BkB,WApFe,SAAUlM,EAAQiK,EAAcjC,EAAkB+D,EAAMC,EAAOG,GAC9EnM,EAAOqK,UAAU+B,WACbD,EACF5L,EAAS8C,KAAKrD,EAAOiC,IAAIiI,OAAO,8BAA+B,SAAUmC,GACnEA,EAAKrJ,aAAa,mBAAqB+I,GACzC/L,EAAOiC,IAAIgK,OAAOI,GAAM,KAI5BrM,EAAOiC,IAAIgK,OAAOD,GAAO,GAE3BhC,EAAgBhK,EAAQiK,EAAcjC,IA0EtCsE,iBAtDqB,SAAUtM,EAAQsC,GACvC,IAAIiK,EACAP,EAAQ,GAEZ,IADAO,EAAQhM,EAASiM,QAAQxM,EAAOkI,UAAUvF,qBAAqB,UACrDH,OACR,IAAK,IAAIK,EAAI,EAAGA,EAAI0J,EAAM/J,OAAQK,IAAK,CACrC,IAAI4J,EAAYjC,EAAY+B,EAAM1J,IAChB,OAAd4J,GAAuBA,EAAUjK,QAGjCiK,IAAcnK,EAAMoK,YACtBV,EAAM7I,KAAKoJ,EAAM1J,IAIvB,OAAOmJ,GAwCPxB,YAAaA,EACbE,WAAYA,GAuBViC,EAAM,CAAEtN,IApBF,SAAUW,EAAQiK,EAAcU,EAAsB3C,EAAkBK,EAAsBY,GAatG,MAAO,CACLlB,eAJmB,WACnB,OAAOC,EAAiB3I,OAIxBuN,mBAXuB,WACvB,OAAOhM,EAASO,+BAA+BnB,IAW/C0K,WATe,SAAUvI,GACzBwJ,EAAQjB,WAAW1K,EAAQiK,EAAcjC,EAAkB2C,EAAsBxI,IASjFpB,YAhBgB,WAChB,OAAOsH,EAAqBhJ,UAyB5BwN,EAAW,CAAEC,SALF,SAAU9M,EAAQoI,EAAW6B,EAAcjC,EAAkB2C,EAAsBtC,GAChGrI,EAAO+M,WAAW,gBAAiB,WACjCpB,EAAQC,WAAW5L,EAAQoI,EAAW6B,EAAcjC,EAAkB2C,EAAsBtC,OAK5F2E,EAAW,WAUb,OATAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC5C,IAAK,IAAIC,EAAGvK,EAAI,EAAGwK,EAAIC,UAAU9K,OAAQK,EAAIwK,EAAGxK,IAE9C,IAAK,IAAI0K,KADTH,EAAIE,UAAUzK,GAERoK,OAAOO,UAAUC,eAAe3D,KAAKsD,EAAGG,KAC1CJ,EAAEI,GAAKH,EAAEG,IAEf,OAAOJ,IAEOO,MAAMlK,KAAM8J,YAG1BK,EAAqB,gCA+ErBC,EAAU,CAAEd,SA1DC,SAAU9M,EAAQoI,EAAW6B,EAAcjC,EAAkBK,EAAsBsC,GAClG,IArBuCkD,EACnCC,EAoBAC,GArBmCF,EAW1B,SAAU7N,GACvB,OAAOO,EAASyN,IAAIpN,EAASC,aAAab,GAAQiO,MAAM,KAAM,SAAUC,GAEtE,MAAO,CACL5F,MAFF4F,EAAWA,EAASD,MAAM,MAET,GACf7O,MAAO8O,EAAS,MAK+BC,CAASnO,GApBxD8N,EAAQ,GACZvN,EAAS8C,KAAKwK,EAAgB,SAAUO,GACtCN,EAAM3K,KAAK,CACTkL,YAAY,EACZzM,KAAMwM,EAAc9F,KACpBnG,KAAMiM,EAAchP,UAGjB0O,GAaHQ,EAAqB,WACvB3C,EAAQC,WAAW5L,EAAQoI,EAAW6B,EAAcjC,EAAkB2C,EAAsBtC,IAE1FkG,EAAa,CACfC,QAAS,aACTC,SAAUH,EACVI,KAAM,cACNC,QAAS,SAAUC,GACjB,IAAIC,EAAiB,WACnBD,EAAUE,UAAU7E,EAAa5K,QAGnC,OADAW,EAAO+O,GAAGpB,EAAoBkB,GACvB,WACL7O,EAAOgP,IAAIrB,EAAoBkB,MAIjCI,EAAkBjC,EAASA,EAAS,GAAIuB,GAAa,CACvDpF,KAAM,cACNe,OAAQ,SAAU9K,GAChB,OAAOA,IAAUiJ,EAAqBhJ,OAExC6P,MAAO,SAAU5L,GAQfA,EAPY/C,EAASyN,IAAID,EAAmB,SAAUoB,GACpD,MAAO,CACLhG,KAAM,aACN/J,MAAO+P,EAAahN,KACpBP,KAAMuN,EAAavN,UAKzBwN,aAAc,SAAUC,EAAgBjQ,GACtCiJ,EAAqB/I,IAAIF,MAGzB2O,EAAkBvL,OAAS,EAC7BxC,EAAOsP,GAAGC,SAASC,eAAe,eAAgBP,GAElDjP,EAAOsP,GAAGC,SAASE,gBAAgB,eAAgBlB,GAErDvO,EAAOsP,GAAGC,SAASG,kBAAkB,eAAgB,CACnD9N,KAAM,aACN+M,QAAS,SAAUgB,GACjBA,EAAQb,UAAU7E,EAAa5K,OAC/B,IAAIuQ,EAAmB,WACrBD,EAAQb,UAAU7E,EAAa5K,QAGjC,OADAW,EAAO+O,GAAGpB,EAAoBiC,GACvB,WACL5P,EAAOgP,IAAIrB,EAAoBiC,KAGnCnB,SAAUH,MAgEVuB,EAAkB,CAAEC,MAlBZ,SAAU9P,EAAQoI,EAAWuC,EAAsBV,EAAcjC,EAAkBK,GAgB7FrI,EAAOsP,GAAGC,SAASQ,eAAe,eAAgB,CAAEC,OAfvC,SAAUlN,GACrB,IAAImN,EAASnN,EACb,GAAyB,0BAArBmN,EAAOhN,UAUT,MAAO,GATP,IAAI+I,EAAQL,EAAQW,iBAAiBtM,EAAQ2L,EAAQnB,YAAYyF,IACjE,GAAIjE,EAAMxJ,OAAS,EAAG,CACpB,IAAIuB,EAAM/D,EAAOiC,IAAI+B,YAIrB,OAHAD,EAAIE,eAAe+H,EAAM,IACzBjI,EAAIG,YAAY8H,EAAMA,EAAMxJ,OAAS,IACrCxC,EAAOqK,UAAU6F,OAAOnM,GAjDX,SAAU/D,EAAQoI,EAAWuC,EAAsBV,EAAcjC,EAAkBK,EAAsB0D,EAAMC,GAClI,IAAI8B,EAAQ,GACRhD,EAAcH,EAAqBtL,MAAMyL,YAAYiB,GAoCzD,OAnCAxL,EAAS8C,KAAKyH,EAAa,SAAUqF,GACnCrC,EAAM3K,KAAK,CACTvB,KAAMuO,EACN1B,SAAU,WACRzO,EAAOoQ,cAAcpQ,EAAOiC,IAAIoO,OAAOF,IACvCnQ,EAAOiC,IAAIgK,OAAOD,GAClBL,EAAQ3B,gBAAgBhK,EAAQiK,EAAcjC,QAIzB2C,EAAqBtL,MAAMuL,uBAEpDkD,EAAM3K,KAAK,CAAEgG,KAAM,cACnB2E,EAAM3K,KAAK,CACTvB,KAAM,oBACN6M,SAAU,WACR9C,EAAQG,gBAAgB9L,EAAQoI,EAAW6B,EAAcjC,EAAkBK,EAAsB0D,EAAMC,OAI7G8B,EAAM3K,KAAKuK,MAAMI,EAAO,CACtB,CAAE3E,KAAM,aACR,CACEvH,KAAM,SACN6M,SAAU,WACR9C,EAAQO,WAAWlM,EAAQiK,EAAcjC,EAAkB+D,EAAMC,KAGrE,CACEpK,KAAM,aACN6M,SAAU,WACR9C,EAAQO,WAAWlM,EAAQiK,EAAcjC,EAAkB+D,EAAMC,GAnCzD,OAuCP8B,EAYMwC,CAAetQ,EAAQoI,EAAWuC,EAAsBV,EAAcjC,EAAkBK,EAAsB4H,EAAOjN,aAAa,iBAAkBgJ,SAWjKvM,EAAO2F,IAAI,eAAgB,SAAUpF,EAAQoI,GAC3C,IAA6C,IAAzCtI,EAAgBC,aAAaC,GAAmB,CAClD,IAAIiK,EAAe/K,GAAK,GACpBmJ,EAAuBnJ,EAAK0B,EAASG,YAAYf,IACjDgI,EAAmB9I,EAAK,MACxByL,EAAuBzL,EAAK,MAIhC,OAHA0O,EAAQd,SAAS9M,EAAQoI,EAAW6B,EAAcjC,EAAkBK,EAAsBsC,GAC1FkF,EAAgBC,MAAM9P,EAAQoI,EAAWuC,EAAsBV,EAAcjC,EAAkBK,GAC/FwE,EAASC,SAAS9M,EAAQoI,EAAW6B,EAAcjC,EAAkB2C,EAAsBtC,GACpFsE,EAAItN,IAAIW,EAAQiK,EAAcU,EAAsB3C,EAAkBK,EAAsBD,MAzuB7G,CAgvBEhI","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.1.0 (2019-10-17)\n */\n(function (domGlobals) {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var hasProPlugin = function (editor) {\n      if (/(^|[ ,])tinymcespellchecker([, ]|$)/.test(editor.settings.plugins) && global.get('tinymcespellchecker')) {\n        if (typeof domGlobals.window.console !== 'undefined' && domGlobals.window.console.log) {\n          domGlobals.window.console.log('Spell Checker Pro is incompatible with Spell Checker plugin! ' + 'Remove \\'spellchecker\\' from the \\'plugins\\' option.');\n        }\n        return true;\n      } else {\n        return false;\n      }\n    };\n    var DetectProPlugin = { hasProPlugin: hasProPlugin };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var fireSpellcheckStart = function (editor) {\n      return editor.fire('SpellcheckStart');\n    };\n    var fireSpellcheckEnd = function (editor) {\n      return editor.fire('SpellcheckEnd');\n    };\n    var Events = {\n      fireSpellcheckStart: fireSpellcheckStart,\n      fireSpellcheckEnd: fireSpellcheckEnd\n    };\n\n    var getLanguages = function (editor) {\n      var defaultLanguages = 'English=en,Danish=da,Dutch=nl,Finnish=fi,French=fr_FR,German=de,Italian=it,Polish=pl,Portuguese=pt_BR,Spanish=es,Swedish=sv';\n      return editor.getParam('spellchecker_languages', defaultLanguages);\n    };\n    var getLanguage = function (editor) {\n      var defaultLanguage = editor.getParam('language', 'en');\n      return editor.getParam('spellchecker_language', defaultLanguage);\n    };\n    var getRpcUrl = function (editor) {\n      return editor.getParam('spellchecker_rpc_url');\n    };\n    var getSpellcheckerCallback = function (editor) {\n      return editor.getParam('spellchecker_callback');\n    };\n    var getSpellcheckerWordcharPattern = function (editor) {\n      var defaultPattern = new RegExp('[^' + '\\\\s!\"#$%&()*+,-./:;<=>?@[\\\\]^_{|}`' + '\\xA7\\xA9\\xAB\\xAE\\xB1\\xB6\\xB7\\xB8\\xBB' + '\\xBC\\xBD\\xBE\\xBF\\xD7\\xF7\\xA4\\u201D\\u201C\\u201E\\xA0\\u2002\\u2003\\u2009' + ']+', 'g');\n      return editor.getParam('spellchecker_wordchar_pattern', defaultPattern);\n    };\n    var Settings = {\n      getLanguages: getLanguages,\n      getLanguage: getLanguage,\n      getRpcUrl: getRpcUrl,\n      getSpellcheckerCallback: getSpellcheckerCallback,\n      getSpellcheckerWordcharPattern: getSpellcheckerWordcharPattern\n    };\n\n    function isContentEditableFalse(node) {\n      return node && node.nodeType === 1 && node.contentEditable === 'false';\n    }\n    var DomTextMatcher = function (node, editor) {\n      var m, matches = [], text;\n      var dom = editor.dom;\n      var blockElementsMap, hiddenTextElementsMap, shortEndedElementsMap;\n      blockElementsMap = editor.schema.getBlockElements();\n      hiddenTextElementsMap = editor.schema.getWhiteSpaceElements();\n      shortEndedElementsMap = editor.schema.getShortEndedElements();\n      function createMatch(m, data) {\n        if (!m[0]) {\n          throw new Error('findAndReplaceDOMText cannot handle zero-length matches');\n        }\n        return {\n          start: m.index,\n          end: m.index + m[0].length,\n          text: m[0],\n          data: data\n        };\n      }\n      function getText(node) {\n        var txt;\n        if (node.nodeType === 3) {\n          return node.data;\n        }\n        if (hiddenTextElementsMap[node.nodeName] && !blockElementsMap[node.nodeName]) {\n          return '';\n        }\n        if (isContentEditableFalse(node)) {\n          return '\\n';\n        }\n        txt = '';\n        if (blockElementsMap[node.nodeName] || shortEndedElementsMap[node.nodeName]) {\n          txt += '\\n';\n        }\n        if (node = node.firstChild) {\n          do {\n            txt += getText(node);\n          } while (node = node.nextSibling);\n        }\n        return txt;\n      }\n      function stepThroughMatches(node, matches, replaceFn) {\n        var startNode, endNode, startNodeIndex, endNodeIndex, innerNodes = [], atIndex = 0, curNode = node, matchLocation, matchIndex = 0;\n        matches = matches.slice(0);\n        matches.sort(function (a, b) {\n          return a.start - b.start;\n        });\n        matchLocation = matches.shift();\n        out:\n          while (true) {\n            if (blockElementsMap[curNode.nodeName] || shortEndedElementsMap[curNode.nodeName] || isContentEditableFalse(curNode)) {\n              atIndex++;\n            }\n            if (curNode.nodeType === 3) {\n              if (!endNode && curNode.length + atIndex >= matchLocation.end) {\n                endNode = curNode;\n                endNodeIndex = matchLocation.end - atIndex;\n              } else if (startNode) {\n                innerNodes.push(curNode);\n              }\n              if (!startNode && curNode.length + atIndex > matchLocation.start) {\n                startNode = curNode;\n                startNodeIndex = matchLocation.start - atIndex;\n              }\n              atIndex += curNode.length;\n            }\n            if (startNode && endNode) {\n              curNode = replaceFn({\n                startNode: startNode,\n                startNodeIndex: startNodeIndex,\n                endNode: endNode,\n                endNodeIndex: endNodeIndex,\n                innerNodes: innerNodes,\n                match: matchLocation.text,\n                matchIndex: matchIndex\n              });\n              atIndex -= endNode.length - endNodeIndex;\n              startNode = null;\n              endNode = null;\n              innerNodes = [];\n              matchLocation = matches.shift();\n              matchIndex++;\n              if (!matchLocation) {\n                break;\n              }\n            } else if ((!hiddenTextElementsMap[curNode.nodeName] || blockElementsMap[curNode.nodeName]) && curNode.firstChild) {\n              if (!isContentEditableFalse(curNode)) {\n                curNode = curNode.firstChild;\n                continue;\n              }\n            } else if (curNode.nextSibling) {\n              curNode = curNode.nextSibling;\n              continue;\n            }\n            while (true) {\n              if (curNode.nextSibling) {\n                curNode = curNode.nextSibling;\n                break;\n              } else if (curNode.parentNode !== node) {\n                curNode = curNode.parentNode;\n              } else {\n                break out;\n              }\n            }\n          }\n      }\n      function genReplacer(callback) {\n        function makeReplacementNode(fill, matchIndex) {\n          var match = matches[matchIndex];\n          if (!match.stencil) {\n            match.stencil = callback(match);\n          }\n          var clone = match.stencil.cloneNode(false);\n          clone.setAttribute('data-mce-index', matchIndex);\n          if (fill) {\n            clone.appendChild(dom.doc.createTextNode(fill));\n          }\n          return clone;\n        }\n        return function (range) {\n          var before;\n          var after;\n          var parentNode;\n          var startNode = range.startNode;\n          var endNode = range.endNode;\n          var matchIndex = range.matchIndex;\n          var doc = dom.doc;\n          if (startNode === endNode) {\n            var node_1 = startNode;\n            parentNode = node_1.parentNode;\n            if (range.startNodeIndex > 0) {\n              before = doc.createTextNode(node_1.data.substring(0, range.startNodeIndex));\n              parentNode.insertBefore(before, node_1);\n            }\n            var el = makeReplacementNode(range.match, matchIndex);\n            parentNode.insertBefore(el, node_1);\n            if (range.endNodeIndex < node_1.length) {\n              after = doc.createTextNode(node_1.data.substring(range.endNodeIndex));\n              parentNode.insertBefore(after, node_1);\n            }\n            node_1.parentNode.removeChild(node_1);\n            return el;\n          }\n          before = doc.createTextNode(startNode.data.substring(0, range.startNodeIndex));\n          after = doc.createTextNode(endNode.data.substring(range.endNodeIndex));\n          var elA = makeReplacementNode(startNode.data.substring(range.startNodeIndex), matchIndex);\n          for (var i = 0, l = range.innerNodes.length; i < l; ++i) {\n            var innerNode = range.innerNodes[i];\n            var innerEl = makeReplacementNode(innerNode.data, matchIndex);\n            innerNode.parentNode.replaceChild(innerEl, innerNode);\n          }\n          var elB = makeReplacementNode(endNode.data.substring(0, range.endNodeIndex), matchIndex);\n          parentNode = startNode.parentNode;\n          parentNode.insertBefore(before, startNode);\n          parentNode.insertBefore(elA, startNode);\n          parentNode.removeChild(startNode);\n          parentNode = endNode.parentNode;\n          parentNode.insertBefore(elB, endNode);\n          parentNode.insertBefore(after, endNode);\n          parentNode.removeChild(endNode);\n          return elB;\n        };\n      }\n      function unwrapElement(element) {\n        var parentNode = element.parentNode;\n        parentNode.insertBefore(element.firstChild, element);\n        element.parentNode.removeChild(element);\n      }\n      function hasClass(elm) {\n        return elm.className.indexOf('mce-spellchecker-word') !== -1;\n      }\n      function getWrappersByIndex(index) {\n        var elements = node.getElementsByTagName('*'), wrappers = [];\n        index = typeof index === 'number' ? '' + index : null;\n        for (var i = 0; i < elements.length; i++) {\n          var element = elements[i], dataIndex = element.getAttribute('data-mce-index');\n          if (dataIndex !== null && dataIndex.length && hasClass(element)) {\n            if (dataIndex === index || index === null) {\n              wrappers.push(element);\n            }\n          }\n        }\n        return wrappers;\n      }\n      function indexOf(match) {\n        var i = matches.length;\n        while (i--) {\n          if (matches[i] === match) {\n            return i;\n          }\n        }\n        return -1;\n      }\n      function filter(callback) {\n        var filteredMatches = [];\n        each(function (match, i) {\n          if (callback(match, i)) {\n            filteredMatches.push(match);\n          }\n        });\n        matches = filteredMatches;\n        return this;\n      }\n      function each(callback) {\n        for (var i = 0, l = matches.length; i < l; i++) {\n          if (callback(matches[i], i) === false) {\n            break;\n          }\n        }\n        return this;\n      }\n      function wrap(callback) {\n        if (matches.length) {\n          stepThroughMatches(node, matches, genReplacer(callback));\n        }\n        return this;\n      }\n      function find(regex, data) {\n        if (text && regex.global) {\n          while (m = regex.exec(text)) {\n            matches.push(createMatch(m, data));\n          }\n        }\n        return this;\n      }\n      function unwrap(match) {\n        var i;\n        var elements = getWrappersByIndex(match ? indexOf(match) : null);\n        i = elements.length;\n        while (i--) {\n          unwrapElement(elements[i]);\n        }\n        return this;\n      }\n      function matchFromElement(element) {\n        return matches[element.getAttribute('data-mce-index')];\n      }\n      function elementFromMatch(match) {\n        return getWrappersByIndex(indexOf(match))[0];\n      }\n      function add(start, length, data) {\n        matches.push({\n          start: start,\n          end: start + length,\n          text: text.substr(start, length),\n          data: data\n        });\n        return this;\n      }\n      function rangeFromMatch(match) {\n        var wrappers = getWrappersByIndex(indexOf(match));\n        var rng = editor.dom.createRng();\n        rng.setStartBefore(wrappers[0]);\n        rng.setEndAfter(wrappers[wrappers.length - 1]);\n        return rng;\n      }\n      function replace(match, text) {\n        var rng = rangeFromMatch(match);\n        rng.deleteContents();\n        if (text.length > 0) {\n          rng.insertNode(editor.dom.doc.createTextNode(text));\n        }\n        return rng;\n      }\n      function reset() {\n        matches.splice(0, matches.length);\n        unwrap();\n        return this;\n      }\n      text = getText(node);\n      return {\n        text: text,\n        matches: matches,\n        each: each,\n        filter: filter,\n        reset: reset,\n        matchFromElement: matchFromElement,\n        elementFromMatch: elementFromMatch,\n        find: find,\n        add: add,\n        wrap: wrap,\n        unwrap: unwrap,\n        replace: replace,\n        rangeFromMatch: rangeFromMatch,\n        indexOf: indexOf\n      };\n    };\n\n    var getTextMatcher = function (editor, textMatcherState) {\n      if (!textMatcherState.get()) {\n        var textMatcher = DomTextMatcher(editor.getBody(), editor);\n        textMatcherState.set(textMatcher);\n      }\n      return textMatcherState.get();\n    };\n    var isEmpty = function (obj) {\n      for (var _ in obj) {\n        return false;\n      }\n      return true;\n    };\n    var defaultSpellcheckCallback = function (editor, pluginUrl, currentLanguageState) {\n      return function (method, text, doneCallback, errorCallback) {\n        var data = {\n          method: method,\n          lang: currentLanguageState.get()\n        };\n        var postData = '';\n        data[method === 'addToDictionary' ? 'word' : 'text'] = text;\n        global$1.each(data, function (value, key) {\n          if (postData) {\n            postData += '&';\n          }\n          postData += key + '=' + encodeURIComponent(value);\n        });\n        global$3.send({\n          url: new global$2(pluginUrl).toAbsolute(Settings.getRpcUrl(editor)),\n          type: 'post',\n          content_type: 'application/x-www-form-urlencoded',\n          data: postData,\n          success: function (result) {\n            var parseResult = JSON.parse(result);\n            if (!parseResult) {\n              var message = editor.translate('Server response wasn\\'t proper JSON.');\n              errorCallback(message);\n            } else if (parseResult.error) {\n              errorCallback(parseResult.error);\n            } else {\n              doneCallback(parseResult);\n            }\n          },\n          error: function () {\n            var message = editor.translate('The spelling service was not found: (') + Settings.getRpcUrl(editor) + editor.translate(')');\n            errorCallback(message);\n          }\n        });\n      };\n    };\n    var sendRpcCall = function (editor, pluginUrl, currentLanguageState, name, data, successCallback, errorCallback) {\n      var userSpellcheckCallback = Settings.getSpellcheckerCallback(editor);\n      var spellCheckCallback = userSpellcheckCallback ? userSpellcheckCallback : defaultSpellcheckCallback(editor, pluginUrl, currentLanguageState);\n      spellCheckCallback.call(editor.plugins.spellchecker, name, data, successCallback, errorCallback);\n    };\n    var spellcheck = function (editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState) {\n      if (finish(editor, startedState, textMatcherState)) {\n        return;\n      }\n      var errorCallback = function (message) {\n        editor.notificationManager.open({\n          text: message,\n          type: 'error'\n        });\n        editor.setProgressState(false);\n        finish(editor, startedState, textMatcherState);\n      };\n      var successCallback = function (data) {\n        markErrors(editor, startedState, textMatcherState, lastSuggestionsState, data);\n      };\n      editor.setProgressState(true);\n      sendRpcCall(editor, pluginUrl, currentLanguageState, 'spellcheck', getTextMatcher(editor, textMatcherState).text, successCallback, errorCallback);\n      editor.focus();\n    };\n    var checkIfFinished = function (editor, startedState, textMatcherState) {\n      if (!editor.dom.select('span.mce-spellchecker-word').length) {\n        finish(editor, startedState, textMatcherState);\n      }\n    };\n    var addToDictionary = function (editor, pluginUrl, startedState, textMatcherState, currentLanguageState, word, spans) {\n      editor.setProgressState(true);\n      sendRpcCall(editor, pluginUrl, currentLanguageState, 'addToDictionary', word, function () {\n        editor.setProgressState(false);\n        editor.dom.remove(spans, true);\n        checkIfFinished(editor, startedState, textMatcherState);\n      }, function (message) {\n        editor.notificationManager.open({\n          text: message,\n          type: 'error'\n        });\n        editor.setProgressState(false);\n      });\n    };\n    var ignoreWord = function (editor, startedState, textMatcherState, word, spans, all) {\n      editor.selection.collapse();\n      if (all) {\n        global$1.each(editor.dom.select('span.mce-spellchecker-word'), function (span) {\n          if (span.getAttribute('data-mce-word') === word) {\n            editor.dom.remove(span, true);\n          }\n        });\n      } else {\n        editor.dom.remove(spans, true);\n      }\n      checkIfFinished(editor, startedState, textMatcherState);\n    };\n    var finish = function (editor, startedState, textMatcherState) {\n      var bookmark = editor.selection.getBookmark();\n      getTextMatcher(editor, textMatcherState).reset();\n      editor.selection.moveToBookmark(bookmark);\n      textMatcherState.set(null);\n      if (startedState.get()) {\n        startedState.set(false);\n        Events.fireSpellcheckEnd(editor);\n        return true;\n      }\n    };\n    var getElmIndex = function (elm) {\n      var value = elm.getAttribute('data-mce-index');\n      if (typeof value === 'number') {\n        return '' + value;\n      }\n      return value;\n    };\n    var findSpansByIndex = function (editor, index) {\n      var nodes;\n      var spans = [];\n      nodes = global$1.toArray(editor.getBody().getElementsByTagName('span'));\n      if (nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          var nodeIndex = getElmIndex(nodes[i]);\n          if (nodeIndex === null || !nodeIndex.length) {\n            continue;\n          }\n          if (nodeIndex === index.toString()) {\n            spans.push(nodes[i]);\n          }\n        }\n      }\n      return spans;\n    };\n    var markErrors = function (editor, startedState, textMatcherState, lastSuggestionsState, data) {\n      var hasDictionarySupport = !!data.dictionary;\n      var suggestions = data.words;\n      editor.setProgressState(false);\n      if (isEmpty(suggestions)) {\n        var message = editor.translate('No misspellings found.');\n        editor.notificationManager.open({\n          text: message,\n          type: 'info'\n        });\n        startedState.set(false);\n        return;\n      }\n      lastSuggestionsState.set({\n        suggestions: suggestions,\n        hasDictionarySupport: hasDictionarySupport\n      });\n      var bookmark = editor.selection.getBookmark();\n      getTextMatcher(editor, textMatcherState).find(Settings.getSpellcheckerWordcharPattern(editor)).filter(function (match) {\n        return !!suggestions[match.text];\n      }).wrap(function (match) {\n        return editor.dom.create('span', {\n          'class': 'mce-spellchecker-word',\n          'aria-invalid': 'spelling',\n          'data-mce-bogus': 1,\n          'data-mce-word': match.text\n        });\n      });\n      editor.selection.moveToBookmark(bookmark);\n      startedState.set(true);\n      Events.fireSpellcheckStart(editor);\n    };\n    var Actions = {\n      spellcheck: spellcheck,\n      checkIfFinished: checkIfFinished,\n      addToDictionary: addToDictionary,\n      ignoreWord: ignoreWord,\n      findSpansByIndex: findSpansByIndex,\n      getElmIndex: getElmIndex,\n      markErrors: markErrors\n    };\n\n    var get = function (editor, startedState, lastSuggestionsState, textMatcherState, currentLanguageState, url) {\n      var getLanguage = function () {\n        return currentLanguageState.get();\n      };\n      var getWordCharPattern = function () {\n        return Settings.getSpellcheckerWordcharPattern(editor);\n      };\n      var markErrors = function (data) {\n        Actions.markErrors(editor, startedState, textMatcherState, lastSuggestionsState, data);\n      };\n      var getTextMatcher = function () {\n        return textMatcherState.get();\n      };\n      return {\n        getTextMatcher: getTextMatcher,\n        getWordCharPattern: getWordCharPattern,\n        markErrors: markErrors,\n        getLanguage: getLanguage\n      };\n    };\n    var Api = { get: get };\n\n    var register = function (editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState) {\n      editor.addCommand('mceSpellCheck', function () {\n        Actions.spellcheck(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n      });\n    };\n    var Commands = { register: register };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var spellcheckerEvents = 'SpellcheckStart SpellcheckEnd';\n    var buildMenuItems = function (listName, languageValues) {\n      var items = [];\n      global$1.each(languageValues, function (languageValue) {\n        items.push({\n          selectable: true,\n          text: languageValue.name,\n          data: languageValue.value\n        });\n      });\n      return items;\n    };\n    var getItems = function (editor) {\n      return global$1.map(Settings.getLanguages(editor).split(','), function (langPair) {\n        langPair = langPair.split('=');\n        return {\n          name: langPair[0],\n          value: langPair[1]\n        };\n      });\n    };\n    var register$1 = function (editor, pluginUrl, startedState, textMatcherState, currentLanguageState, lastSuggestionsState) {\n      var languageMenuItems = buildMenuItems('Language', getItems(editor));\n      var startSpellchecking = function () {\n        Actions.spellcheck(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n      };\n      var buttonArgs = {\n        tooltip: 'Spellcheck',\n        onAction: startSpellchecking,\n        icon: 'spell-check',\n        onSetup: function (buttonApi) {\n          var setButtonState = function () {\n            buttonApi.setActive(startedState.get());\n          };\n          editor.on(spellcheckerEvents, setButtonState);\n          return function () {\n            editor.off(spellcheckerEvents, setButtonState);\n          };\n        }\n      };\n      var splitButtonArgs = __assign(__assign({}, buttonArgs), {\n        type: 'splitbutton',\n        select: function (value) {\n          return value === currentLanguageState.get();\n        },\n        fetch: function (callback) {\n          var items = global$1.map(languageMenuItems, function (languageItem) {\n            return {\n              type: 'choiceitem',\n              value: languageItem.data,\n              text: languageItem.text\n            };\n          });\n          callback(items);\n        },\n        onItemAction: function (splitButtonApi, value) {\n          currentLanguageState.set(value);\n        }\n      });\n      if (languageMenuItems.length > 1) {\n        editor.ui.registry.addSplitButton('spellchecker', splitButtonArgs);\n      } else {\n        editor.ui.registry.addToggleButton('spellchecker', buttonArgs);\n      }\n      editor.ui.registry.addToggleMenuItem('spellchecker', {\n        text: 'Spellcheck',\n        onSetup: function (menuApi) {\n          menuApi.setActive(startedState.get());\n          var setMenuItemCheck = function () {\n            menuApi.setActive(startedState.get());\n          };\n          editor.on(spellcheckerEvents, setMenuItemCheck);\n          return function () {\n            editor.off(spellcheckerEvents, setMenuItemCheck);\n          };\n        },\n        onAction: startSpellchecking\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    var ignoreAll = true;\n    var getSuggestions = function (editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState, word, spans) {\n      var items = [];\n      var suggestions = lastSuggestionsState.get().suggestions[word];\n      global$1.each(suggestions, function (suggestion) {\n        items.push({\n          text: suggestion,\n          onAction: function () {\n            editor.insertContent(editor.dom.encode(suggestion));\n            editor.dom.remove(spans);\n            Actions.checkIfFinished(editor, startedState, textMatcherState);\n          }\n        });\n      });\n      var hasDictionarySupport = lastSuggestionsState.get().hasDictionarySupport;\n      if (hasDictionarySupport) {\n        items.push({ type: 'separator' });\n        items.push({\n          text: 'Add to dictionary',\n          onAction: function () {\n            Actions.addToDictionary(editor, pluginUrl, startedState, textMatcherState, currentLanguageState, word, spans);\n          }\n        });\n      }\n      items.push.apply(items, [\n        { type: 'separator' },\n        {\n          text: 'Ignore',\n          onAction: function () {\n            Actions.ignoreWord(editor, startedState, textMatcherState, word, spans);\n          }\n        },\n        {\n          text: 'Ignore all',\n          onAction: function () {\n            Actions.ignoreWord(editor, startedState, textMatcherState, word, spans, ignoreAll);\n          }\n        }\n      ]);\n      return items;\n    };\n    var setup = function (editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState) {\n      var update = function (element) {\n        var target = element;\n        if (target.className === 'mce-spellchecker-word') {\n          var spans = Actions.findSpansByIndex(editor, Actions.getElmIndex(target));\n          if (spans.length > 0) {\n            var rng = editor.dom.createRng();\n            rng.setStartBefore(spans[0]);\n            rng.setEndAfter(spans[spans.length - 1]);\n            editor.selection.setRng(rng);\n            return getSuggestions(editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState, target.getAttribute('data-mce-word'), spans);\n          }\n        } else {\n          return [];\n        }\n      };\n      editor.ui.registry.addContextMenu('spellchecker', { update: update });\n    };\n    var SuggestionsMenu = { setup: setup };\n\n    function Plugin () {\n      global.add('spellchecker', function (editor, pluginUrl) {\n        if (DetectProPlugin.hasProPlugin(editor) === false) {\n          var startedState = Cell(false);\n          var currentLanguageState = Cell(Settings.getLanguage(editor));\n          var textMatcherState = Cell(null);\n          var lastSuggestionsState = Cell(null);\n          Buttons.register(editor, pluginUrl, startedState, textMatcherState, currentLanguageState, lastSuggestionsState);\n          SuggestionsMenu.setup(editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState);\n          Commands.register(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n          return Api.get(editor, startedState, lastSuggestionsState, textMatcherState, currentLanguageState, pluginUrl);\n        }\n      });\n    }\n\n    Plugin();\n\n}(window));\n"]}