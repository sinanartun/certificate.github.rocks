{"version":3,"sources":["legacyoutput/plugin.js"],"names":["global","tinymce","util","Tools","resolve","global$1","Settings","editor","getParam","fontsize_formats","settings","font_formats","inline_styles","Formats","setup","overrideSettings","on","alignElements","fontSizes","explode","schema","formatter","register","alignleft","selector","attributes","align","aligncenter","alignright","alignjustify","bold","inline","remove","styles","fontWeight","italic","fontStyle","underline","textDecoration","exact","strikethrough","fontname","toggle","face","fontsize","size","vars","inArray","value","forecolor","color","links","remove_similar","clear_child_styles","hilitecolor","backgroundColor","each","split","name","addValidElements","getElementRule","rule","attributesOrder","push","overrideFormats","add"],"mappings":"CAQC,WACG,aAEA,IAAIA,EAASC,QAAQC,KAAKC,MAAMC,QAAQ,yBAEpCC,EAAWJ,QAAQC,KAAKC,MAAMC,QAAQ,sBAoBtCE,EAZiB,SAAUC,GAC7B,OAAOA,EAAOC,SAAS,iBAWrBF,EAlBqB,SAAUC,GACjC,OAAOA,EAAOC,SAAS,qBAiBrBF,EAfqB,SAAUC,EAAQE,GACzCF,EAAOG,SAASD,iBAAmBA,GAcjCH,EATiB,SAAUC,EAAQI,GACrCJ,EAAOG,SAASC,aAAeA,GAQ7BL,EANyB,SAAUC,GACrC,OAAOA,EAAOC,SAAS,yBAA0B,yDAK/CF,EAHkB,SAAUC,EAAQK,GACtCL,EAAOG,SAASE,cAAgBA,GA8I9BC,EAAU,CAAEC,MANJ,SAAUP,IAXC,SAAUA,GAG/BD,EAAyBC,GAAQ,GAC5BD,EAA4BC,IAC/BD,EAA4BC,EAJD,mDAMxBD,EAAwBC,IAC3BD,EAAwBC,EANA,wkBAU1BQ,CAAiBR,GACjBA,EAAOS,GAAG,OAAQ,WAChB,OAhIkB,SAAUT,GAC9B,IAAIU,EAAgB,+CAAgDC,EAAYb,EAASc,QAAQb,EAAgCC,IAAUa,EAASb,EAAOa,OAC3Jb,EAAOc,UAAUC,SAAS,CACxBC,UAAW,CACTC,SAAUP,EACVQ,WAAY,CAAEC,MAAO,SAEvBC,YAAa,CACXH,SAAUP,EACVQ,WAAY,CAAEC,MAAO,WAEvBE,WAAY,CACVJ,SAAUP,EACVQ,WAAY,CAAEC,MAAO,UAEvBG,aAAc,CACZL,SAAUP,EACVQ,WAAY,CAAEC,MAAO,YAEvBI,KAAM,CACJ,CACEC,OAAQ,IACRC,OAAQ,OAEV,CACED,OAAQ,SACRC,OAAQ,OAEV,CACED,OAAQ,OACRE,OAAQ,CAAEC,WAAY,UAG1BC,OAAQ,CACN,CACEJ,OAAQ,IACRC,OAAQ,OAEV,CACED,OAAQ,KACRC,OAAQ,OAEV,CACED,OAAQ,OACRE,OAAQ,CAAEG,UAAW,YAGzBC,UAAW,CACT,CACEN,OAAQ,IACRC,OAAQ,OAEV,CACED,OAAQ,OACRE,OAAQ,CAAEK,eAAgB,aAC1BC,OAAO,IAGXC,cAAe,CACb,CACET,OAAQ,SACRC,OAAQ,OAEV,CACED,OAAQ,OACRE,OAAQ,CAAEK,eAAgB,gBAC1BC,OAAO,IAGXE,SAAU,CACRV,OAAQ,OACRW,QAAQ,EACRjB,WAAY,CAAEkB,KAAM,WAEtBC,SAAU,CACRb,OAAQ,OACRW,QAAQ,EACRjB,WAAY,CACVoB,KAAM,SAAUC,GACd,OAAOzC,EAAS0C,QAAQ7B,EAAW4B,EAAKE,OAAS,KAIvDC,UAAW,CACTlB,OAAQ,OACRN,WAAY,CAAEyB,MAAO,UACrBC,OAAO,EACPC,gBAAgB,EAChBC,oBAAoB,GAEtBC,YAAa,CACXvB,OAAQ,OACRE,OAAQ,CAAEsB,gBAAiB,UAC3BJ,OAAO,EACPC,gBAAgB,EAChBC,oBAAoB,KAGxBhD,EAASmD,KAAK,eAAeC,MAAM,KAAM,SAAUC,GACjDtC,EAAOuC,iBAAiBD,EAAO,SAE5BtC,EAAOwC,eAAe,SACzBxC,EAAOuC,iBAAiB,+BAE1BtD,EAASmD,KAAKvC,EAAcwC,MAAM,KAAM,SAAUC,GAChD,IAAIG,EAAOzC,EAAOwC,eAAeF,GAC7BG,IACGA,EAAKpC,WAAWC,QACnBmC,EAAKpC,WAAWC,MAAQ,GACxBmC,EAAKC,gBAAgBC,KAAK,aAmBvBC,CAAgBzD,OAMzBP,EAAOiE,IAAI,eAAgB,SAAU1D,GACnCM,EAAQC,MAAMP,KAzKtB","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.1.0 (2019-10-17)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getFontSizeFormats = function (editor) {\n      return editor.getParam('fontsize_formats');\n    };\n    var setFontSizeFormats = function (editor, fontsize_formats) {\n      editor.settings.fontsize_formats = fontsize_formats;\n    };\n    var getFontFormats = function (editor) {\n      return editor.getParam('font_formats');\n    };\n    var setFontFormats = function (editor, font_formats) {\n      editor.settings.font_formats = font_formats;\n    };\n    var getFontSizeStyleValues = function (editor) {\n      return editor.getParam('font_size_style_values', 'xx-small,x-small,small,medium,large,x-large,xx-large');\n    };\n    var setInlineStyles = function (editor, inline_styles) {\n      editor.settings.inline_styles = inline_styles;\n    };\n    var Settings = {\n      getFontFormats: getFontFormats,\n      getFontSizeFormats: getFontSizeFormats,\n      setFontSizeFormats: setFontSizeFormats,\n      setFontFormats: setFontFormats,\n      getFontSizeStyleValues: getFontSizeStyleValues,\n      setInlineStyles: setInlineStyles\n    };\n\n    var overrideFormats = function (editor) {\n      var alignElements = 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table', fontSizes = global$1.explode(Settings.getFontSizeStyleValues(editor)), schema = editor.schema;\n      editor.formatter.register({\n        alignleft: {\n          selector: alignElements,\n          attributes: { align: 'left' }\n        },\n        aligncenter: {\n          selector: alignElements,\n          attributes: { align: 'center' }\n        },\n        alignright: {\n          selector: alignElements,\n          attributes: { align: 'right' }\n        },\n        alignjustify: {\n          selector: alignElements,\n          attributes: { align: 'justify' }\n        },\n        bold: [\n          {\n            inline: 'b',\n            remove: 'all'\n          },\n          {\n            inline: 'strong',\n            remove: 'all'\n          },\n          {\n            inline: 'span',\n            styles: { fontWeight: 'bold' }\n          }\n        ],\n        italic: [\n          {\n            inline: 'i',\n            remove: 'all'\n          },\n          {\n            inline: 'em',\n            remove: 'all'\n          },\n          {\n            inline: 'span',\n            styles: { fontStyle: 'italic' }\n          }\n        ],\n        underline: [\n          {\n            inline: 'u',\n            remove: 'all'\n          },\n          {\n            inline: 'span',\n            styles: { textDecoration: 'underline' },\n            exact: true\n          }\n        ],\n        strikethrough: [\n          {\n            inline: 'strike',\n            remove: 'all'\n          },\n          {\n            inline: 'span',\n            styles: { textDecoration: 'line-through' },\n            exact: true\n          }\n        ],\n        fontname: {\n          inline: 'font',\n          toggle: false,\n          attributes: { face: '%value' }\n        },\n        fontsize: {\n          inline: 'font',\n          toggle: false,\n          attributes: {\n            size: function (vars) {\n              return global$1.inArray(fontSizes, vars.value) + 1;\n            }\n          }\n        },\n        forecolor: {\n          inline: 'font',\n          attributes: { color: '%value' },\n          links: true,\n          remove_similar: true,\n          clear_child_styles: true\n        },\n        hilitecolor: {\n          inline: 'font',\n          styles: { backgroundColor: '%value' },\n          links: true,\n          remove_similar: true,\n          clear_child_styles: true\n        }\n      });\n      global$1.each('b,i,u,strike'.split(','), function (name) {\n        schema.addValidElements(name + '[*]');\n      });\n      if (!schema.getElementRule('font')) {\n        schema.addValidElements('font[face|size|color|style]');\n      }\n      global$1.each(alignElements.split(','), function (name) {\n        var rule = schema.getElementRule(name);\n        if (rule) {\n          if (!rule.attributes.align) {\n            rule.attributes.align = {};\n            rule.attributesOrder.push('align');\n          }\n        }\n      });\n    };\n    var overrideSettings = function (editor) {\n      var defaultFontsizeFormats = '8pt=1 10pt=2 12pt=3 14pt=4 18pt=5 24pt=6 36pt=7';\n      var defaultFontsFormats = 'Andale Mono=andale mono,monospace;' + 'Arial=arial,helvetica,sans-serif;' + 'Arial Black=arial black,sans-serif;' + 'Book Antiqua=book antiqua,palatino,serif;' + 'Comic Sans MS=comic sans ms,sans-serif;' + 'Courier New=courier new,courier,monospace;' + 'Georgia=georgia,palatino,serif;' + 'Helvetica=helvetica,arial,sans-serif;' + 'Impact=impact,sans-serif;' + 'Symbol=symbol;' + 'Tahoma=tahoma,arial,helvetica,sans-serif;' + 'Terminal=terminal,monaco,monospace;' + 'Times New Roman=times new roman,times,serif;' + 'Trebuchet MS=trebuchet ms,geneva,sans-serif;' + 'Verdana=verdana,geneva,sans-serif;' + 'Webdings=webdings;' + 'Wingdings=wingdings,zapf dingbats';\n      Settings.setInlineStyles(editor, false);\n      if (!Settings.getFontSizeFormats(editor)) {\n        Settings.setFontSizeFormats(editor, defaultFontsizeFormats);\n      }\n      if (!Settings.getFontFormats(editor)) {\n        Settings.setFontFormats(editor, defaultFontsFormats);\n      }\n    };\n    var setup = function (editor) {\n      overrideSettings(editor);\n      editor.on('init', function () {\n        return overrideFormats(editor);\n      });\n    };\n    var Formats = { setup: setup };\n\n    function Plugin () {\n      global.add('legacyoutput', function (editor) {\n        Formats.setup(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"]}