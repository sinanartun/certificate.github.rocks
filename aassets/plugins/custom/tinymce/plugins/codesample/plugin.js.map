{"version":3,"sources":["codesample/plugin.js"],"names":["domGlobals","global","tinymce","util","Tools","resolve","global$1","window","global$2","_self","WorkerGlobalScope","self","Prism","lang","_","encode","tokens","Token","type","content","alias","map","replace","o","Object","prototype","toString","call","match","clone","key","hasOwnProperty","v","languages","extend","id","redef","insertBefore","inside","before","insert","root","grammar","arguments","length","newToken","ret","token","DFS","value","this","callback","i","plugins","highlightAll","async","elements","document","querySelectorAll","element","highlightElement","language","parent","test","className","parentNode","nodeName","code","textContent","env","hooks","run","Worker","worker","filename","onmessage","evt","highlightedCode","data","innerHTML","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","strarr","rest","tokenloop","patterns","j","pattern","lookbehind","lookbehindLength","str","lastIndex","exec","from","index","to","slice","after","args","push","wrapped","Array","splice","apply","all","add","name","callbacks","join","tag","classes","attributes","spellcheck","aliases","addEventListener","message","parse","close","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","title","xml","html","mathml","svg","css","atrule","rule","url","selector","string","property","important","function","style","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","regex","template-string","interpolation","interpolation-punctuation","script","js","c","macro","csharp","preprocessor","cpp","java","php","constant","shell-comment","delimiter","variable","package","tokenStack","backupCode","t","python","ruby","symbol","builtin","eq","me","Utils","isCodeSample","elm","indexOf","trimArg","predicateFn","arg1","arg2","noop","never","always","none","NONE","isNone","fold","n","s","is","isSome","getOr","getOrThunk","thunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","each","bind","exists","forall","filter","equals","equals_","toArray","freeze","some","a","constant_a","f","elementEq","b","Option","getSelectedCodeSample","editor","node","selection","getNode","CodeSample","undoManager","transact","DOM","insertContent","select","$","removeAttr","dom","setAttrib","Settings","settings","codesample_languages","Languages","customLanguages","fallback","matches","isFunction","x","isPrototypeOf","constructor","String","typeOf","nativeSlice","Dialog","open","xs","defaultLanguage","l","currentLanguage","currentCode","windowManager","size","body","items","label","buttons","primary","initialData","onSubmit","api","getData","Commands","register","addCommand","isCollapsed","formatter","toggle","FilterContent","setup","on","e","idx","$elm","attr","trim","empty","append","unprocessedCodeSamples","contentEditable","find","replaceChild","getDoc","createTextNode","Buttons","ui","registry","addToggleButton","icon","tooltip","onAction","onSetup","nodeChangeHandler","setActive","getStart","isCodeSampleSelection","off","addMenuItem","ev","target"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.1.0 (2019-10-17)\n */\n(function (domGlobals) {\n  'use strict';\n\n  var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n  var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n  var window = {};\n  var global$2 = window;\n  var _self = typeof window !== 'undefined' ? window : typeof WorkerGlobalScope !== 'undefined' && domGlobals.self instanceof WorkerGlobalScope ? domGlobals.self : {};\n  var Prism = function () {\n    var lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n    var _ = _self.Prism = {\n      util: {\n        encode: function (tokens) {\n          if (tokens instanceof Token) {\n            return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n          } else if (_.util.type(tokens) === 'Array') {\n            return tokens.map(_.util.encode);\n          } else {\n            return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n          }\n        },\n        type: function (o) {\n          return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n        },\n        clone: function (o) {\n          var type = _.util.type(o);\n          switch (type) {\n          case 'Object':\n            var clone = {};\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key]);\n              }\n            }\n            return clone;\n          case 'Array':\n            return o.map && o.map(function (v) {\n              return _.util.clone(v);\n            });\n          }\n          return o;\n        }\n      },\n      languages: {\n        extend: function (id, redef) {\n          var lang = _.util.clone(_.languages[id]);\n          for (var key in redef) {\n            lang[key] = redef[key];\n          }\n          return lang;\n        },\n        insertBefore: function (inside, before, insert, root) {\n          root = root || _.languages;\n          var grammar = root[inside];\n          if (arguments.length === 2) {\n            insert = arguments[1];\n            for (var newToken in insert) {\n              if (insert.hasOwnProperty(newToken)) {\n                grammar[newToken] = insert[newToken];\n              }\n            }\n            return grammar;\n          }\n          var ret = {};\n          for (var token in grammar) {\n            if (grammar.hasOwnProperty(token)) {\n              if (token === before) {\n                for (var newToken in insert) {\n                  if (insert.hasOwnProperty(newToken)) {\n                    ret[newToken] = insert[newToken];\n                  }\n                }\n              }\n              ret[token] = grammar[token];\n            }\n          }\n          _.languages.DFS(_.languages, function (key, value) {\n            if (value === root[inside] && key !== inside) {\n              this[key] = ret;\n            }\n          });\n          return root[inside] = ret;\n        },\n        DFS: function (o, callback, type) {\n          for (var i in o) {\n            if (o.hasOwnProperty(i)) {\n              callback.call(o, i, o[i], type || i);\n              if (_.util.type(o[i]) === 'Object') {\n                _.languages.DFS(o[i], callback);\n              } else if (_.util.type(o[i]) === 'Array') {\n                _.languages.DFS(o[i], callback, i);\n              }\n            }\n          }\n        }\n      },\n      plugins: {},\n      highlightAll: function (async, callback) {\n        var elements = domGlobals.document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\n        for (var i = 0, element = void 0; element = elements[i++];) {\n          _.highlightElement(element, async === true, callback);\n        }\n      },\n      highlightElement: function (element, async, callback) {\n        var language, grammar, parent = element;\n        while (parent && !lang.test(parent.className)) {\n          parent = parent.parentNode;\n        }\n        if (parent) {\n          language = (parent.className.match(lang) || [\n            ,\n            ''\n          ])[1];\n          grammar = _.languages[language];\n        }\n        element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n        parent = element.parentNode;\n        if (/pre/i.test(parent.nodeName)) {\n          parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n        }\n        var code = element.textContent;\n        var env = {\n          element: element,\n          language: language,\n          grammar: grammar,\n          code: code\n        };\n        if (!code || !grammar) {\n          _.hooks.run('complete', env);\n          return;\n        }\n        _.hooks.run('before-highlight', env);\n        if (async && _self.Worker) {\n          var worker = new domGlobals.Worker(_.filename);\n          worker.onmessage = function (evt) {\n            env.highlightedCode = evt.data;\n            _.hooks.run('before-insert', env);\n            env.element.innerHTML = env.highlightedCode;\n            if (callback) {\n              callback.call(env.element);\n            }\n            _.hooks.run('after-highlight', env);\n            _.hooks.run('complete', env);\n          };\n          worker.postMessage(JSON.stringify({\n            language: env.language,\n            code: env.code,\n            immediateClose: true\n          }));\n        } else {\n          env.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n          _.hooks.run('before-insert', env);\n          env.element.innerHTML = env.highlightedCode;\n          if (callback) {\n            callback.call(element);\n          }\n          _.hooks.run('after-highlight', env);\n          _.hooks.run('complete', env);\n        }\n      },\n      highlight: function (text, grammar, language) {\n        var tokens = _.tokenize(text, grammar);\n        return Token.stringify(_.util.encode(tokens), language);\n      },\n      tokenize: function (text, grammar, language) {\n        var Token = _.Token;\n        var strarr = [text];\n        var rest = grammar.rest;\n        if (rest) {\n          for (var token in rest) {\n            grammar[token] = rest[token];\n          }\n          delete grammar.rest;\n        }\n        tokenloop:\n          for (var token in grammar) {\n            if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n              continue;\n            }\n            var patterns = grammar[token];\n            patterns = _.util.type(patterns) === 'Array' ? patterns : [patterns];\n            for (var j = 0; j < patterns.length; ++j) {\n              var pattern = patterns[j];\n              var inside = pattern.inside;\n              var lookbehind = !!pattern.lookbehind;\n              var lookbehindLength = 0;\n              var alias = pattern.alias;\n              pattern = pattern.pattern || pattern;\n              for (var i = 0; i < strarr.length; i++) {\n                var str = strarr[i];\n                if (strarr.length > text.length) {\n                  break tokenloop;\n                }\n                if (str instanceof Token) {\n                  continue;\n                }\n                pattern.lastIndex = 0;\n                var match = pattern.exec(str);\n                if (match) {\n                  if (lookbehind) {\n                    lookbehindLength = match[1].length;\n                  }\n                  var from = match.index - 1 + lookbehindLength;\n                  match = match[0].slice(lookbehindLength);\n                  var len = match.length, to = from + len, before = str.slice(0, from + 1), after = str.slice(to + 1);\n                  var args = [\n                    i,\n                    1\n                  ];\n                  if (before) {\n                    args.push(before);\n                  }\n                  var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias);\n                  args.push(wrapped);\n                  if (after) {\n                    args.push(after);\n                  }\n                  Array.prototype.splice.apply(strarr, args);\n                }\n              }\n            }\n          }\n        return strarr;\n      },\n      hooks: {\n        all: {},\n        add: function (name, callback) {\n          var hooks = _.hooks.all;\n          hooks[name] = hooks[name] || [];\n          hooks[name].push(callback);\n        },\n        run: function (name, env) {\n          var callbacks = _.hooks.all[name];\n          if (!callbacks || !callbacks.length) {\n            return;\n          }\n          for (var i = 0, callback = void 0; callback = callbacks[i++];) {\n            callback(env);\n          }\n        }\n      }\n    };\n    var Token = _.Token = function (type, content, alias) {\n      this.type = type;\n      this.content = content;\n      this.alias = alias;\n    };\n    Token.stringify = function (o, language, parent) {\n      if (typeof o === 'string') {\n        return o;\n      }\n      if (_.util.type(o) === 'Array') {\n        return o.map(function (element) {\n          return Token.stringify(element, language, o);\n        }).join('');\n      }\n      var env = {\n        type: o.type,\n        content: Token.stringify(o.content, language, parent),\n        tag: 'span',\n        classes: [\n          'token',\n          o.type\n        ],\n        attributes: {},\n        language: language,\n        parent: parent\n      };\n      if (env.type === 'comment') {\n        env.attributes.spellcheck = 'true';\n      }\n      if (o.alias) {\n        var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n        Array.prototype.push.apply(env.classes, aliases);\n      }\n      _.hooks.run('wrap', env);\n      var attributes = '';\n      for (var name in env.attributes) {\n        attributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\n      }\n      return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\n    };\n    if (!_self.document) {\n      if (!_self.addEventListener) {\n        return _self.Prism;\n      }\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data), lang = message.language, code = message.code, immediateClose = message.immediateClose;\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n      return _self.Prism;\n    }\n  }();\n  if (typeof global$2 !== 'undefined') {\n    global$2.Prism = Prism;\n  }\n  Prism.languages.markup = {\n    comment: /<!--[\\w\\W]*?-->/,\n    prolog: /<\\?[\\w\\W]+?\\?>/,\n    doctype: /<!DOCTYPE[\\w\\W]+?>/,\n    cdata: /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n    tag: {\n      pattern: /<\\/?[^\\s>\\/=.]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n      inside: {\n        'tag': {\n          pattern: /^<\\/?[^\\s>\\/]+/i,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'attr-value': {\n          pattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n          inside: { punctuation: /[=>\"']/ }\n        },\n        'punctuation': /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: { namespace: /^[^\\s>\\/:]+:/ }\n        }\n      }\n    },\n    entity: /&#?[\\da-z]{1,8};/i\n  };\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes.title = env.content.replace(/&amp;/, '&');\n    }\n  });\n  Prism.languages.xml = Prism.languages.markup;\n  Prism.languages.html = Prism.languages.markup;\n  Prism.languages.mathml = Prism.languages.markup;\n  Prism.languages.svg = Prism.languages.markup;\n  Prism.languages.css = {\n    comment: /\\/\\*[\\w\\W]*?\\*\\//,\n    atrule: {\n      pattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n      inside: { rule: /@[\\w-]+/ }\n    },\n    url: /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n    selector: /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n    string: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    property: /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n    important: /\\B!important\\b/i,\n    function: /[-a-z0-9]+(?=\\()/i,\n    punctuation: /[(){};:]/\n  };\n  Prism.languages.css.atrule.inside.rest = Prism.util.clone(Prism.languages.css);\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('markup', 'tag', {\n      style: {\n        pattern: /<style[\\w\\W]*?>[\\w\\W]*?<\\/style>/i,\n        inside: {\n          tag: {\n            pattern: /<style[\\w\\W]*?>|<\\/style>/i,\n            inside: Prism.languages.markup.tag.inside\n          },\n          rest: Prism.languages.css\n        },\n        alias: 'language-css'\n      }\n    });\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|').*?\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: Prism.languages.markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, Prism.languages.markup.tag);\n  }\n  Prism.languages.clike = {\n    'comment': [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    'string': /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'class-name': {\n      pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n      lookbehind: true,\n      inside: { punctuation: /(\\.|\\\\)/ }\n    },\n    'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n    'boolean': /\\b(true|false)\\b/,\n    'function': /[a-z0-9_]+(?=\\()/i,\n    'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n    'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    'punctuation': /[{}[\\];(),.:]/\n  };\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    keyword: /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/,\n    number: /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n    function: /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i\n  });\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'class-name', {\n    'template-string': {\n      pattern: /`(?:\\\\`|\\\\?[^`])*`/,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^}]+\\}/,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            'rest': Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('markup', 'tag', {\n      script: {\n        pattern: /<script[\\w\\W]*?>[\\w\\W]*?<\\/script>/i,\n        inside: {\n          tag: {\n            pattern: /<script[\\w\\W]*?>|<\\/script>/i,\n            inside: Prism.languages.markup.tag.inside\n          },\n          rest: Prism.languages.javascript\n        },\n        alias: 'language-javascript'\n      }\n    });\n  }\n  Prism.languages.js = Prism.languages.javascript;\n  Prism.languages.c = Prism.languages.extend('clike', {\n    keyword: /\\b(asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n    operator: /\\-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*\\/]/,\n    number: /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)[ful]*\\b/i\n  });\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      pattern: /(^\\s*)#\\s*[a-z]+([^\\r\\n\\\\]|\\\\.|\\\\(?:\\r\\n?|\\n))*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        string: {\n          pattern: /(#\\s*include\\s*)(<.+?>|(\"|')(\\\\?.)+?\\3)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  delete Prism.languages.c['class-name'];\n  delete Prism.languages.c.boolean;\n  Prism.languages.csharp = Prism.languages.extend('clike', {\n    keyword: /\\b(abstract|as|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|do|double|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|goto|if|implicit|in|int|interface|internal|is|lock|long|namespace|new|null|object|operator|out|override|params|private|protected|public|readonly|ref|return|sbyte|sealed|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|virtual|void|volatile|while|add|alias|ascending|async|await|descending|dynamic|from|get|global|group|into|join|let|orderby|partial|remove|select|set|value|var|where|yield)\\b/,\n    string: [\n      /@(\"|')(\\1\\1|\\\\\\1|\\\\?(?!\\1)[\\s\\S])*\\1/,\n      /(\"|')(\\\\?.)*?\\1/\n    ],\n    number: /\\b-?(0x[\\da-f]+|\\d*\\.?\\d+)\\b/i\n  });\n  Prism.languages.insertBefore('csharp', 'keyword', {\n    preprocessor: {\n      pattern: /(^\\s*)#.*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    keyword: /\\b(alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n    boolean: /\\b(true|false)\\b/,\n    operator: /[-+]{1,2}|!=?|<{1,2}=?|>{1,2}=?|\\->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|?\\||\\?|\\*|\\/|\\b(and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'class-name': {\n      pattern: /(class\\s+)[a-z0-9_]+/i,\n      lookbehind: true\n    }\n  });\n  Prism.languages.java = Prism.languages.extend('clike', {\n    keyword: /\\b(abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n    number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp\\-]+\\b|\\b\\d*\\.?\\d+(?:e[+-]?\\d+)?[df]?\\b/i,\n    operator: {\n      pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.php = Prism.languages.extend('clike', {\n    keyword: /\\b(and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n    constant: /\\b[A-Z0-9_]{2,}\\b/,\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'class-name', {\n    'shell-comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('php', 'keyword', {\n    delimiter: /\\?>|<\\?(?:php)?/i,\n    variable: /\\$\\w+\\b/i,\n    package: {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: true,\n      inside: { punctuation: /\\\\/ }\n    }\n  });\n  Prism.languages.insertBefore('php', 'operator', {\n    property: {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    }\n  });\n  if (Prism.languages.markup) {\n    Prism.hooks.add('before-highlight', function (env) {\n      if (env.language !== 'php') {\n        return;\n      }\n      env.tokenStack = [];\n      env.backupCode = env.code;\n      env.code = env.code.replace(/(?:<\\?php|<\\?)[\\w\\W]*?(?:\\?>)/ig, function (match) {\n        env.tokenStack.push(match);\n        return '{{{PHP' + env.tokenStack.length + '}}}';\n      });\n    });\n    Prism.hooks.add('before-insert', function (env) {\n      if (env.language === 'php') {\n        env.code = env.backupCode;\n        delete env.backupCode;\n      }\n    });\n    Prism.hooks.add('after-highlight', function (env) {\n      if (env.language !== 'php') {\n        return;\n      }\n      for (var i = 0, t = void 0; t = env.tokenStack[i]; i++) {\n        env.highlightedCode = env.highlightedCode.replace('{{{PHP' + (i + 1) + '}}}', Prism.highlight(t, env.grammar, 'php').replace(/\\$/g, '$$$$'));\n      }\n      env.element.innerHTML = env.highlightedCode;\n    });\n    Prism.hooks.add('wrap', function (env) {\n      if (env.language === 'php' && env.type === 'markup') {\n        env.content = env.content.replace(/(\\{\\{\\{PHP[0-9]+\\}\\}\\})/g, '<span class=\"token php\">$1</span>');\n      }\n    });\n    Prism.languages.insertBefore('php', 'comment', {\n      markup: {\n        pattern: /<[^?]\\/?(.*?)>/,\n        inside: Prism.languages.markup\n      },\n      php: /\\{\\{\\{PHP[0-9]+\\}\\}\\}/\n    });\n  }\n  Prism.languages.python = {\n    'comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    'string': /\"\"\"[\\s\\S]+?\"\"\"|'''[\\s\\S]+?'''|(\"|')(?:\\\\?.)*?\\1/,\n    'function': {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_][a-zA-Z0-9_]*(?=\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)[a-z0-9_]+/i,\n      lookbehind: true\n    },\n    'keyword': /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|with|yield)\\b/,\n    'boolean': /\\b(?:True|False)\\b/,\n    'number': /\\b-?(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n    'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n    'punctuation': /[{}[\\];(),.:]/\n  };\n  (function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: /#(?!\\{[^\\r\\n]*?\\}).*/,\n      keyword: /\\b(alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n    });\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'tag'\n        },\n        rest: Prism.util.clone(Prism.languages.ruby)\n      }\n    };\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      regex: [\n        {\n          pattern: /%r([^a-zA-Z0-9\\s\\{\\(\\[<])(?:[^\\\\]|\\\\[\\s\\S])*?\\1[gim]{0,3}/,\n          inside: { interpolation: interpolation }\n        },\n        {\n          pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n          inside: { interpolation: interpolation }\n        },\n        {\n          pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n          inside: { interpolation: interpolation }\n        },\n        {\n          pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n          inside: { interpolation: interpolation }\n        },\n        {\n          pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n          inside: { interpolation: interpolation }\n        },\n        {\n          pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n          lookbehind: true\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_][a-zA-Z_0-9]*(?:[?!]|\\b)/,\n      symbol: /:[a-zA-Z_][a-zA-Z_0-9]*(?:[?!]|\\b)/\n    });\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin: /\\b(Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|File|Fixnum|Fload|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z][a-zA-Z_0-9]*(?:[?!]|\\b)/\n    });\n    Prism.languages.ruby.string = [\n      {\n        pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s\\{\\(\\[<])(?:[^\\\\]|\\\\[\\s\\S])*?\\1/,\n        inside: { interpolation: interpolation }\n      },\n      {\n        pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        inside: { interpolation: interpolation }\n      },\n      {\n        pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n        inside: { interpolation: interpolation }\n      },\n      {\n        pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        inside: { interpolation: interpolation }\n      },\n      {\n        pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        inside: { interpolation: interpolation }\n      },\n      {\n        pattern: /(\"|')(#\\{[^}]+\\}|\\\\(?:\\r?\\n|\\r)|\\\\?.)*?\\1/,\n        inside: { interpolation: interpolation }\n      }\n    ];\n  }(Prism));\n\n  function isCodeSample(elm) {\n    return elm && elm.nodeName === 'PRE' && elm.className.indexOf('language-') !== -1;\n  }\n  function trimArg(predicateFn) {\n    return function (arg1, arg2) {\n      return predicateFn(arg2);\n    };\n  }\n  var Utils = {\n    isCodeSample: isCodeSample,\n    trimArg: trimArg\n  };\n\n  var noop = function () {\n  };\n  var constant = function (value) {\n    return function () {\n      return value;\n    };\n  };\n  var never = constant(false);\n  var always = constant(true);\n\n  var none = function () {\n    return NONE;\n  };\n  var NONE = function () {\n    var eq = function (o) {\n      return o.isNone();\n    };\n    var call = function (thunk) {\n      return thunk();\n    };\n    var id = function (n) {\n      return n;\n    };\n    var me = {\n      fold: function (n, s) {\n        return n();\n      },\n      is: never,\n      isSome: never,\n      isNone: always,\n      getOr: id,\n      getOrThunk: call,\n      getOrDie: function (msg) {\n        throw new Error(msg || 'error: getOrDie called on none.');\n      },\n      getOrNull: constant(null),\n      getOrUndefined: constant(undefined),\n      or: id,\n      orThunk: call,\n      map: none,\n      each: noop,\n      bind: none,\n      exists: never,\n      forall: always,\n      filter: none,\n      equals: eq,\n      equals_: eq,\n      toArray: function () {\n        return [];\n      },\n      toString: constant('none()')\n    };\n    if (Object.freeze) {\n      Object.freeze(me);\n    }\n    return me;\n  }();\n  var some = function (a) {\n    var constant_a = constant(a);\n    var self = function () {\n      return me;\n    };\n    var bind = function (f) {\n      return f(a);\n    };\n    var me = {\n      fold: function (n, s) {\n        return s(a);\n      },\n      is: function (v) {\n        return a === v;\n      },\n      isSome: always,\n      isNone: never,\n      getOr: constant_a,\n      getOrThunk: constant_a,\n      getOrDie: constant_a,\n      getOrNull: constant_a,\n      getOrUndefined: constant_a,\n      or: self,\n      orThunk: self,\n      map: function (f) {\n        return some(f(a));\n      },\n      each: function (f) {\n        f(a);\n      },\n      bind: bind,\n      exists: bind,\n      forall: bind,\n      filter: function (f) {\n        return f(a) ? me : NONE;\n      },\n      toArray: function () {\n        return [a];\n      },\n      toString: function () {\n        return 'some(' + a + ')';\n      },\n      equals: function (o) {\n        return o.is(a);\n      },\n      equals_: function (o, elementEq) {\n        return o.fold(never, function (b) {\n          return elementEq(a, b);\n        });\n      }\n    };\n    return me;\n  };\n  var from = function (value) {\n    return value === null || value === undefined ? NONE : some(value);\n  };\n  var Option = {\n    some: some,\n    none: none,\n    from: from\n  };\n\n  var getSelectedCodeSample = function (editor) {\n    var node = editor.selection ? editor.selection.getNode() : null;\n    if (Utils.isCodeSample(node)) {\n      return Option.some(node);\n    }\n    return Option.none();\n  };\n  var insertCodeSample = function (editor, language, code) {\n    editor.undoManager.transact(function () {\n      var node = getSelectedCodeSample(editor);\n      code = global$1.DOM.encode(code);\n      return node.fold(function () {\n        editor.insertContent('<pre id=\"__new\" class=\"language-' + language + '\">' + code + '</pre>');\n        editor.selection.select(editor.$('#__new').removeAttr('id')[0]);\n      }, function (n) {\n        editor.dom.setAttrib(n, 'class', 'language-' + language);\n        n.innerHTML = code;\n        Prism.highlightElement(n);\n        editor.selection.select(n);\n      });\n    });\n  };\n  var getCurrentCode = function (editor) {\n    var node = getSelectedCodeSample(editor);\n    return node.fold(function () {\n      return '';\n    }, function (n) {\n      return n.textContent;\n    });\n  };\n  var CodeSample = {\n    getSelectedCodeSample: getSelectedCodeSample,\n    insertCodeSample: insertCodeSample,\n    getCurrentCode: getCurrentCode\n  };\n\n  var getLanguages = function (editor) {\n    return editor.settings.codesample_languages;\n  };\n  var Settings = { getLanguages: getLanguages };\n\n  var getLanguages$1 = function (editor) {\n    var defaultLanguages = [\n      {\n        text: 'HTML/XML',\n        value: 'markup'\n      },\n      {\n        text: 'JavaScript',\n        value: 'javascript'\n      },\n      {\n        text: 'CSS',\n        value: 'css'\n      },\n      {\n        text: 'PHP',\n        value: 'php'\n      },\n      {\n        text: 'Ruby',\n        value: 'ruby'\n      },\n      {\n        text: 'Python',\n        value: 'python'\n      },\n      {\n        text: 'Java',\n        value: 'java'\n      },\n      {\n        text: 'C',\n        value: 'c'\n      },\n      {\n        text: 'C#',\n        value: 'csharp'\n      },\n      {\n        text: 'C++',\n        value: 'cpp'\n      }\n    ];\n    var customLanguages = Settings.getLanguages(editor);\n    return customLanguages ? customLanguages : defaultLanguages;\n  };\n  var getCurrentLanguage = function (editor, fallback) {\n    var node = CodeSample.getSelectedCodeSample(editor);\n    return node.fold(function () {\n      return fallback;\n    }, function (n) {\n      var matches = n.className.match(/language-(\\w+)/);\n      return matches ? matches[1] : fallback;\n    });\n  };\n  var Languages = {\n    getLanguages: getLanguages$1,\n    getCurrentLanguage: getCurrentLanguage\n  };\n\n  var typeOf = function (x) {\n    if (x === null) {\n      return 'null';\n    }\n    var t = typeof x;\n    if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n      return 'array';\n    }\n    if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n      return 'string';\n    }\n    return t;\n  };\n  var isType = function (type) {\n    return function (value) {\n      return typeOf(value) === type;\n    };\n  };\n  var isFunction = isType('function');\n\n  var nativeSlice = Array.prototype.slice;\n  var head = function (xs) {\n    return xs.length === 0 ? Option.none() : Option.some(xs[0]);\n  };\n  var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n    return nativeSlice.call(x);\n  };\n\n  var open = function (editor) {\n    var languages = Languages.getLanguages(editor);\n    var defaultLanguage = head(languages).fold(function () {\n      return '';\n    }, function (l) {\n      return l.value;\n    });\n    var currentLanguage = Languages.getCurrentLanguage(editor, defaultLanguage);\n    var currentCode = CodeSample.getCurrentCode(editor);\n    editor.windowManager.open({\n      title: 'Insert/Edit Code Sample',\n      size: 'large',\n      body: {\n        type: 'panel',\n        items: [\n          {\n            type: 'selectbox',\n            name: 'language',\n            label: 'Language',\n            items: languages\n          },\n          {\n            type: 'textarea',\n            name: 'code',\n            label: 'Code view'\n          }\n        ]\n      },\n      buttons: [\n        {\n          type: 'cancel',\n          name: 'cancel',\n          text: 'Cancel'\n        },\n        {\n          type: 'submit',\n          name: 'save',\n          text: 'Save',\n          primary: true\n        }\n      ],\n      initialData: {\n        language: currentLanguage,\n        code: currentCode\n      },\n      onSubmit: function (api) {\n        var data = api.getData();\n        CodeSample.insertCodeSample(editor, data.language, data.code);\n        api.close();\n      }\n    });\n  };\n  var Dialog = { open: open };\n\n  var register = function (editor) {\n    editor.addCommand('codesample', function () {\n      var node = editor.selection.getNode();\n      if (editor.selection.isCollapsed() || Utils.isCodeSample(node)) {\n        Dialog.open(editor);\n      } else {\n        editor.formatter.toggle('code');\n      }\n    });\n  };\n  var Commands = { register: register };\n\n  var setup = function (editor) {\n    var $ = editor.$;\n    editor.on('PreProcess', function (e) {\n      $('pre[contenteditable=false]', e.node).filter(Utils.trimArg(Utils.isCodeSample)).each(function (idx, elm) {\n        var $elm = $(elm), code = elm.textContent;\n        $elm.attr('class', $.trim($elm.attr('class')));\n        $elm.removeAttr('contentEditable');\n        $elm.empty().append($('<code></code>').each(function () {\n          this.textContent = code;\n        }));\n      });\n    });\n    editor.on('SetContent', function () {\n      var unprocessedCodeSamples = $('pre').filter(Utils.trimArg(Utils.isCodeSample)).filter(function (idx, elm) {\n        return elm.contentEditable !== 'false';\n      });\n      if (unprocessedCodeSamples.length) {\n        editor.undoManager.transact(function () {\n          unprocessedCodeSamples.each(function (idx, elm) {\n            $(elm).find('br').each(function (idx, elm) {\n              elm.parentNode.replaceChild(editor.getDoc().createTextNode('\\n'), elm);\n            });\n            elm.contentEditable = 'false';\n            elm.innerHTML = editor.dom.encode(elm.textContent);\n            Prism.highlightElement(elm);\n            elm.className = $.trim(elm.className);\n          });\n        });\n      }\n    });\n  };\n  var FilterContent = { setup: setup };\n\n  var isCodeSampleSelection = function (editor) {\n    var node = editor.selection.getStart();\n    return editor.dom.is(node, 'pre.language-markup');\n  };\n  var register$1 = function (editor) {\n    editor.ui.registry.addToggleButton('codesample', {\n      icon: 'code-sample',\n      tooltip: 'Insert/edit code sample',\n      onAction: function () {\n        return Dialog.open(editor);\n      },\n      onSetup: function (api) {\n        var nodeChangeHandler = function () {\n          api.setActive(isCodeSampleSelection(editor));\n        };\n        editor.on('NodeChange', nodeChangeHandler);\n        return function () {\n          return editor.off('NodeChange', nodeChangeHandler);\n        };\n      }\n    });\n    editor.ui.registry.addMenuItem('codesample', {\n      text: 'Code sample...',\n      icon: 'code-sample',\n      onAction: function () {\n        return Dialog.open(editor);\n      }\n    });\n  };\n  var Buttons = { register: register$1 };\n\n  function Plugin () {\n    global.add('codesample', function (editor) {\n      FilterContent.setup(editor);\n      Buttons.register(editor);\n      Commands.register(editor);\n      editor.on('dblclick', function (ev) {\n        if (Utils.isCodeSample(ev.target)) {\n          Dialog.open(editor);\n        }\n      });\n    });\n  }\n\n  Plugin();\n\n}(window));\n"]}